#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7309746982530501858) {
   out_7309746982530501858[0] = 0;
   out_7309746982530501858[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7309746982530501858[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7309746982530501858[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7309746982530501858[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7309746982530501858[5] = -sin(in_vec[1]);
   out_7309746982530501858[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7309746982530501858[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7309746982530501858[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7309746982530501858[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7309746982530501858[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7309746982530501858[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7309746982530501858[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7309746982530501858[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7309746982530501858[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7309746982530501858[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7309746982530501858[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7309746982530501858[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5779196364896740181) {
   out_5779196364896740181[0] = delta_x[0] + nom_x[0];
   out_5779196364896740181[1] = delta_x[1] + nom_x[1];
   out_5779196364896740181[2] = delta_x[2] + nom_x[2];
   out_5779196364896740181[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5779196364896740181[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5779196364896740181[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5779196364896740181[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5779196364896740181[7] = delta_x[6] + nom_x[7];
   out_5779196364896740181[8] = delta_x[7] + nom_x[8];
   out_5779196364896740181[9] = delta_x[8] + nom_x[9];
   out_5779196364896740181[10] = delta_x[9] + nom_x[10];
   out_5779196364896740181[11] = delta_x[10] + nom_x[11];
   out_5779196364896740181[12] = delta_x[11] + nom_x[12];
   out_5779196364896740181[13] = delta_x[12] + nom_x[13];
   out_5779196364896740181[14] = delta_x[13] + nom_x[14];
   out_5779196364896740181[15] = delta_x[14] + nom_x[15];
   out_5779196364896740181[16] = delta_x[15] + nom_x[16];
   out_5779196364896740181[17] = delta_x[16] + nom_x[17];
   out_5779196364896740181[18] = delta_x[17] + nom_x[18];
   out_5779196364896740181[19] = delta_x[18] + nom_x[19];
   out_5779196364896740181[20] = delta_x[19] + nom_x[20];
   out_5779196364896740181[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4961782207135168051) {
   out_4961782207135168051[0] = -nom_x[0] + true_x[0];
   out_4961782207135168051[1] = -nom_x[1] + true_x[1];
   out_4961782207135168051[2] = -nom_x[2] + true_x[2];
   out_4961782207135168051[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4961782207135168051[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4961782207135168051[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4961782207135168051[6] = -nom_x[7] + true_x[7];
   out_4961782207135168051[7] = -nom_x[8] + true_x[8];
   out_4961782207135168051[8] = -nom_x[9] + true_x[9];
   out_4961782207135168051[9] = -nom_x[10] + true_x[10];
   out_4961782207135168051[10] = -nom_x[11] + true_x[11];
   out_4961782207135168051[11] = -nom_x[12] + true_x[12];
   out_4961782207135168051[12] = -nom_x[13] + true_x[13];
   out_4961782207135168051[13] = -nom_x[14] + true_x[14];
   out_4961782207135168051[14] = -nom_x[15] + true_x[15];
   out_4961782207135168051[15] = -nom_x[16] + true_x[16];
   out_4961782207135168051[16] = -nom_x[17] + true_x[17];
   out_4961782207135168051[17] = -nom_x[18] + true_x[18];
   out_4961782207135168051[18] = -nom_x[19] + true_x[19];
   out_4961782207135168051[19] = -nom_x[20] + true_x[20];
   out_4961782207135168051[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7146165817346037743) {
   out_7146165817346037743[0] = 1.0;
   out_7146165817346037743[1] = 0;
   out_7146165817346037743[2] = 0;
   out_7146165817346037743[3] = 0;
   out_7146165817346037743[4] = 0;
   out_7146165817346037743[5] = 0;
   out_7146165817346037743[6] = 0;
   out_7146165817346037743[7] = 0;
   out_7146165817346037743[8] = 0;
   out_7146165817346037743[9] = 0;
   out_7146165817346037743[10] = 0;
   out_7146165817346037743[11] = 0;
   out_7146165817346037743[12] = 0;
   out_7146165817346037743[13] = 0;
   out_7146165817346037743[14] = 0;
   out_7146165817346037743[15] = 0;
   out_7146165817346037743[16] = 0;
   out_7146165817346037743[17] = 0;
   out_7146165817346037743[18] = 0;
   out_7146165817346037743[19] = 0;
   out_7146165817346037743[20] = 0;
   out_7146165817346037743[21] = 0;
   out_7146165817346037743[22] = 1.0;
   out_7146165817346037743[23] = 0;
   out_7146165817346037743[24] = 0;
   out_7146165817346037743[25] = 0;
   out_7146165817346037743[26] = 0;
   out_7146165817346037743[27] = 0;
   out_7146165817346037743[28] = 0;
   out_7146165817346037743[29] = 0;
   out_7146165817346037743[30] = 0;
   out_7146165817346037743[31] = 0;
   out_7146165817346037743[32] = 0;
   out_7146165817346037743[33] = 0;
   out_7146165817346037743[34] = 0;
   out_7146165817346037743[35] = 0;
   out_7146165817346037743[36] = 0;
   out_7146165817346037743[37] = 0;
   out_7146165817346037743[38] = 0;
   out_7146165817346037743[39] = 0;
   out_7146165817346037743[40] = 0;
   out_7146165817346037743[41] = 0;
   out_7146165817346037743[42] = 0;
   out_7146165817346037743[43] = 0;
   out_7146165817346037743[44] = 1.0;
   out_7146165817346037743[45] = 0;
   out_7146165817346037743[46] = 0;
   out_7146165817346037743[47] = 0;
   out_7146165817346037743[48] = 0;
   out_7146165817346037743[49] = 0;
   out_7146165817346037743[50] = 0;
   out_7146165817346037743[51] = 0;
   out_7146165817346037743[52] = 0;
   out_7146165817346037743[53] = 0;
   out_7146165817346037743[54] = 0;
   out_7146165817346037743[55] = 0;
   out_7146165817346037743[56] = 0;
   out_7146165817346037743[57] = 0;
   out_7146165817346037743[58] = 0;
   out_7146165817346037743[59] = 0;
   out_7146165817346037743[60] = 0;
   out_7146165817346037743[61] = 0;
   out_7146165817346037743[62] = 0;
   out_7146165817346037743[63] = 0;
   out_7146165817346037743[64] = 0;
   out_7146165817346037743[65] = 0;
   out_7146165817346037743[66] = -0.5*state[4];
   out_7146165817346037743[67] = -0.5*state[5];
   out_7146165817346037743[68] = -0.5*state[6];
   out_7146165817346037743[69] = 0;
   out_7146165817346037743[70] = 0;
   out_7146165817346037743[71] = 0;
   out_7146165817346037743[72] = 0;
   out_7146165817346037743[73] = 0;
   out_7146165817346037743[74] = 0;
   out_7146165817346037743[75] = 0;
   out_7146165817346037743[76] = 0;
   out_7146165817346037743[77] = 0;
   out_7146165817346037743[78] = 0;
   out_7146165817346037743[79] = 0;
   out_7146165817346037743[80] = 0;
   out_7146165817346037743[81] = 0;
   out_7146165817346037743[82] = 0;
   out_7146165817346037743[83] = 0;
   out_7146165817346037743[84] = 0;
   out_7146165817346037743[85] = 0;
   out_7146165817346037743[86] = 0;
   out_7146165817346037743[87] = 0.5*state[3];
   out_7146165817346037743[88] = 0.5*state[6];
   out_7146165817346037743[89] = -0.5*state[5];
   out_7146165817346037743[90] = 0;
   out_7146165817346037743[91] = 0;
   out_7146165817346037743[92] = 0;
   out_7146165817346037743[93] = 0;
   out_7146165817346037743[94] = 0;
   out_7146165817346037743[95] = 0;
   out_7146165817346037743[96] = 0;
   out_7146165817346037743[97] = 0;
   out_7146165817346037743[98] = 0;
   out_7146165817346037743[99] = 0;
   out_7146165817346037743[100] = 0;
   out_7146165817346037743[101] = 0;
   out_7146165817346037743[102] = 0;
   out_7146165817346037743[103] = 0;
   out_7146165817346037743[104] = 0;
   out_7146165817346037743[105] = 0;
   out_7146165817346037743[106] = 0;
   out_7146165817346037743[107] = 0;
   out_7146165817346037743[108] = -0.5*state[6];
   out_7146165817346037743[109] = 0.5*state[3];
   out_7146165817346037743[110] = 0.5*state[4];
   out_7146165817346037743[111] = 0;
   out_7146165817346037743[112] = 0;
   out_7146165817346037743[113] = 0;
   out_7146165817346037743[114] = 0;
   out_7146165817346037743[115] = 0;
   out_7146165817346037743[116] = 0;
   out_7146165817346037743[117] = 0;
   out_7146165817346037743[118] = 0;
   out_7146165817346037743[119] = 0;
   out_7146165817346037743[120] = 0;
   out_7146165817346037743[121] = 0;
   out_7146165817346037743[122] = 0;
   out_7146165817346037743[123] = 0;
   out_7146165817346037743[124] = 0;
   out_7146165817346037743[125] = 0;
   out_7146165817346037743[126] = 0;
   out_7146165817346037743[127] = 0;
   out_7146165817346037743[128] = 0;
   out_7146165817346037743[129] = 0.5*state[5];
   out_7146165817346037743[130] = -0.5*state[4];
   out_7146165817346037743[131] = 0.5*state[3];
   out_7146165817346037743[132] = 0;
   out_7146165817346037743[133] = 0;
   out_7146165817346037743[134] = 0;
   out_7146165817346037743[135] = 0;
   out_7146165817346037743[136] = 0;
   out_7146165817346037743[137] = 0;
   out_7146165817346037743[138] = 0;
   out_7146165817346037743[139] = 0;
   out_7146165817346037743[140] = 0;
   out_7146165817346037743[141] = 0;
   out_7146165817346037743[142] = 0;
   out_7146165817346037743[143] = 0;
   out_7146165817346037743[144] = 0;
   out_7146165817346037743[145] = 0;
   out_7146165817346037743[146] = 0;
   out_7146165817346037743[147] = 0;
   out_7146165817346037743[148] = 0;
   out_7146165817346037743[149] = 0;
   out_7146165817346037743[150] = 0;
   out_7146165817346037743[151] = 0;
   out_7146165817346037743[152] = 0;
   out_7146165817346037743[153] = 1.0;
   out_7146165817346037743[154] = 0;
   out_7146165817346037743[155] = 0;
   out_7146165817346037743[156] = 0;
   out_7146165817346037743[157] = 0;
   out_7146165817346037743[158] = 0;
   out_7146165817346037743[159] = 0;
   out_7146165817346037743[160] = 0;
   out_7146165817346037743[161] = 0;
   out_7146165817346037743[162] = 0;
   out_7146165817346037743[163] = 0;
   out_7146165817346037743[164] = 0;
   out_7146165817346037743[165] = 0;
   out_7146165817346037743[166] = 0;
   out_7146165817346037743[167] = 0;
   out_7146165817346037743[168] = 0;
   out_7146165817346037743[169] = 0;
   out_7146165817346037743[170] = 0;
   out_7146165817346037743[171] = 0;
   out_7146165817346037743[172] = 0;
   out_7146165817346037743[173] = 0;
   out_7146165817346037743[174] = 0;
   out_7146165817346037743[175] = 1.0;
   out_7146165817346037743[176] = 0;
   out_7146165817346037743[177] = 0;
   out_7146165817346037743[178] = 0;
   out_7146165817346037743[179] = 0;
   out_7146165817346037743[180] = 0;
   out_7146165817346037743[181] = 0;
   out_7146165817346037743[182] = 0;
   out_7146165817346037743[183] = 0;
   out_7146165817346037743[184] = 0;
   out_7146165817346037743[185] = 0;
   out_7146165817346037743[186] = 0;
   out_7146165817346037743[187] = 0;
   out_7146165817346037743[188] = 0;
   out_7146165817346037743[189] = 0;
   out_7146165817346037743[190] = 0;
   out_7146165817346037743[191] = 0;
   out_7146165817346037743[192] = 0;
   out_7146165817346037743[193] = 0;
   out_7146165817346037743[194] = 0;
   out_7146165817346037743[195] = 0;
   out_7146165817346037743[196] = 0;
   out_7146165817346037743[197] = 1.0;
   out_7146165817346037743[198] = 0;
   out_7146165817346037743[199] = 0;
   out_7146165817346037743[200] = 0;
   out_7146165817346037743[201] = 0;
   out_7146165817346037743[202] = 0;
   out_7146165817346037743[203] = 0;
   out_7146165817346037743[204] = 0;
   out_7146165817346037743[205] = 0;
   out_7146165817346037743[206] = 0;
   out_7146165817346037743[207] = 0;
   out_7146165817346037743[208] = 0;
   out_7146165817346037743[209] = 0;
   out_7146165817346037743[210] = 0;
   out_7146165817346037743[211] = 0;
   out_7146165817346037743[212] = 0;
   out_7146165817346037743[213] = 0;
   out_7146165817346037743[214] = 0;
   out_7146165817346037743[215] = 0;
   out_7146165817346037743[216] = 0;
   out_7146165817346037743[217] = 0;
   out_7146165817346037743[218] = 0;
   out_7146165817346037743[219] = 1.0;
   out_7146165817346037743[220] = 0;
   out_7146165817346037743[221] = 0;
   out_7146165817346037743[222] = 0;
   out_7146165817346037743[223] = 0;
   out_7146165817346037743[224] = 0;
   out_7146165817346037743[225] = 0;
   out_7146165817346037743[226] = 0;
   out_7146165817346037743[227] = 0;
   out_7146165817346037743[228] = 0;
   out_7146165817346037743[229] = 0;
   out_7146165817346037743[230] = 0;
   out_7146165817346037743[231] = 0;
   out_7146165817346037743[232] = 0;
   out_7146165817346037743[233] = 0;
   out_7146165817346037743[234] = 0;
   out_7146165817346037743[235] = 0;
   out_7146165817346037743[236] = 0;
   out_7146165817346037743[237] = 0;
   out_7146165817346037743[238] = 0;
   out_7146165817346037743[239] = 0;
   out_7146165817346037743[240] = 0;
   out_7146165817346037743[241] = 1.0;
   out_7146165817346037743[242] = 0;
   out_7146165817346037743[243] = 0;
   out_7146165817346037743[244] = 0;
   out_7146165817346037743[245] = 0;
   out_7146165817346037743[246] = 0;
   out_7146165817346037743[247] = 0;
   out_7146165817346037743[248] = 0;
   out_7146165817346037743[249] = 0;
   out_7146165817346037743[250] = 0;
   out_7146165817346037743[251] = 0;
   out_7146165817346037743[252] = 0;
   out_7146165817346037743[253] = 0;
   out_7146165817346037743[254] = 0;
   out_7146165817346037743[255] = 0;
   out_7146165817346037743[256] = 0;
   out_7146165817346037743[257] = 0;
   out_7146165817346037743[258] = 0;
   out_7146165817346037743[259] = 0;
   out_7146165817346037743[260] = 0;
   out_7146165817346037743[261] = 0;
   out_7146165817346037743[262] = 0;
   out_7146165817346037743[263] = 1.0;
   out_7146165817346037743[264] = 0;
   out_7146165817346037743[265] = 0;
   out_7146165817346037743[266] = 0;
   out_7146165817346037743[267] = 0;
   out_7146165817346037743[268] = 0;
   out_7146165817346037743[269] = 0;
   out_7146165817346037743[270] = 0;
   out_7146165817346037743[271] = 0;
   out_7146165817346037743[272] = 0;
   out_7146165817346037743[273] = 0;
   out_7146165817346037743[274] = 0;
   out_7146165817346037743[275] = 0;
   out_7146165817346037743[276] = 0;
   out_7146165817346037743[277] = 0;
   out_7146165817346037743[278] = 0;
   out_7146165817346037743[279] = 0;
   out_7146165817346037743[280] = 0;
   out_7146165817346037743[281] = 0;
   out_7146165817346037743[282] = 0;
   out_7146165817346037743[283] = 0;
   out_7146165817346037743[284] = 0;
   out_7146165817346037743[285] = 1.0;
   out_7146165817346037743[286] = 0;
   out_7146165817346037743[287] = 0;
   out_7146165817346037743[288] = 0;
   out_7146165817346037743[289] = 0;
   out_7146165817346037743[290] = 0;
   out_7146165817346037743[291] = 0;
   out_7146165817346037743[292] = 0;
   out_7146165817346037743[293] = 0;
   out_7146165817346037743[294] = 0;
   out_7146165817346037743[295] = 0;
   out_7146165817346037743[296] = 0;
   out_7146165817346037743[297] = 0;
   out_7146165817346037743[298] = 0;
   out_7146165817346037743[299] = 0;
   out_7146165817346037743[300] = 0;
   out_7146165817346037743[301] = 0;
   out_7146165817346037743[302] = 0;
   out_7146165817346037743[303] = 0;
   out_7146165817346037743[304] = 0;
   out_7146165817346037743[305] = 0;
   out_7146165817346037743[306] = 0;
   out_7146165817346037743[307] = 1.0;
   out_7146165817346037743[308] = 0;
   out_7146165817346037743[309] = 0;
   out_7146165817346037743[310] = 0;
   out_7146165817346037743[311] = 0;
   out_7146165817346037743[312] = 0;
   out_7146165817346037743[313] = 0;
   out_7146165817346037743[314] = 0;
   out_7146165817346037743[315] = 0;
   out_7146165817346037743[316] = 0;
   out_7146165817346037743[317] = 0;
   out_7146165817346037743[318] = 0;
   out_7146165817346037743[319] = 0;
   out_7146165817346037743[320] = 0;
   out_7146165817346037743[321] = 0;
   out_7146165817346037743[322] = 0;
   out_7146165817346037743[323] = 0;
   out_7146165817346037743[324] = 0;
   out_7146165817346037743[325] = 0;
   out_7146165817346037743[326] = 0;
   out_7146165817346037743[327] = 0;
   out_7146165817346037743[328] = 0;
   out_7146165817346037743[329] = 1.0;
   out_7146165817346037743[330] = 0;
   out_7146165817346037743[331] = 0;
   out_7146165817346037743[332] = 0;
   out_7146165817346037743[333] = 0;
   out_7146165817346037743[334] = 0;
   out_7146165817346037743[335] = 0;
   out_7146165817346037743[336] = 0;
   out_7146165817346037743[337] = 0;
   out_7146165817346037743[338] = 0;
   out_7146165817346037743[339] = 0;
   out_7146165817346037743[340] = 0;
   out_7146165817346037743[341] = 0;
   out_7146165817346037743[342] = 0;
   out_7146165817346037743[343] = 0;
   out_7146165817346037743[344] = 0;
   out_7146165817346037743[345] = 0;
   out_7146165817346037743[346] = 0;
   out_7146165817346037743[347] = 0;
   out_7146165817346037743[348] = 0;
   out_7146165817346037743[349] = 0;
   out_7146165817346037743[350] = 0;
   out_7146165817346037743[351] = 1.0;
   out_7146165817346037743[352] = 0;
   out_7146165817346037743[353] = 0;
   out_7146165817346037743[354] = 0;
   out_7146165817346037743[355] = 0;
   out_7146165817346037743[356] = 0;
   out_7146165817346037743[357] = 0;
   out_7146165817346037743[358] = 0;
   out_7146165817346037743[359] = 0;
   out_7146165817346037743[360] = 0;
   out_7146165817346037743[361] = 0;
   out_7146165817346037743[362] = 0;
   out_7146165817346037743[363] = 0;
   out_7146165817346037743[364] = 0;
   out_7146165817346037743[365] = 0;
   out_7146165817346037743[366] = 0;
   out_7146165817346037743[367] = 0;
   out_7146165817346037743[368] = 0;
   out_7146165817346037743[369] = 0;
   out_7146165817346037743[370] = 0;
   out_7146165817346037743[371] = 0;
   out_7146165817346037743[372] = 0;
   out_7146165817346037743[373] = 1.0;
   out_7146165817346037743[374] = 0;
   out_7146165817346037743[375] = 0;
   out_7146165817346037743[376] = 0;
   out_7146165817346037743[377] = 0;
   out_7146165817346037743[378] = 0;
   out_7146165817346037743[379] = 0;
   out_7146165817346037743[380] = 0;
   out_7146165817346037743[381] = 0;
   out_7146165817346037743[382] = 0;
   out_7146165817346037743[383] = 0;
   out_7146165817346037743[384] = 0;
   out_7146165817346037743[385] = 0;
   out_7146165817346037743[386] = 0;
   out_7146165817346037743[387] = 0;
   out_7146165817346037743[388] = 0;
   out_7146165817346037743[389] = 0;
   out_7146165817346037743[390] = 0;
   out_7146165817346037743[391] = 0;
   out_7146165817346037743[392] = 0;
   out_7146165817346037743[393] = 0;
   out_7146165817346037743[394] = 0;
   out_7146165817346037743[395] = 1.0;
   out_7146165817346037743[396] = 0;
   out_7146165817346037743[397] = 0;
   out_7146165817346037743[398] = 0;
   out_7146165817346037743[399] = 0;
   out_7146165817346037743[400] = 0;
   out_7146165817346037743[401] = 0;
   out_7146165817346037743[402] = 0;
   out_7146165817346037743[403] = 0;
   out_7146165817346037743[404] = 0;
   out_7146165817346037743[405] = 0;
   out_7146165817346037743[406] = 0;
   out_7146165817346037743[407] = 0;
   out_7146165817346037743[408] = 0;
   out_7146165817346037743[409] = 0;
   out_7146165817346037743[410] = 0;
   out_7146165817346037743[411] = 0;
   out_7146165817346037743[412] = 0;
   out_7146165817346037743[413] = 0;
   out_7146165817346037743[414] = 0;
   out_7146165817346037743[415] = 0;
   out_7146165817346037743[416] = 0;
   out_7146165817346037743[417] = 1.0;
   out_7146165817346037743[418] = 0;
   out_7146165817346037743[419] = 0;
   out_7146165817346037743[420] = 0;
   out_7146165817346037743[421] = 0;
   out_7146165817346037743[422] = 0;
   out_7146165817346037743[423] = 0;
   out_7146165817346037743[424] = 0;
   out_7146165817346037743[425] = 0;
   out_7146165817346037743[426] = 0;
   out_7146165817346037743[427] = 0;
   out_7146165817346037743[428] = 0;
   out_7146165817346037743[429] = 0;
   out_7146165817346037743[430] = 0;
   out_7146165817346037743[431] = 0;
   out_7146165817346037743[432] = 0;
   out_7146165817346037743[433] = 0;
   out_7146165817346037743[434] = 0;
   out_7146165817346037743[435] = 0;
   out_7146165817346037743[436] = 0;
   out_7146165817346037743[437] = 0;
   out_7146165817346037743[438] = 0;
   out_7146165817346037743[439] = 1.0;
   out_7146165817346037743[440] = 0;
   out_7146165817346037743[441] = 0;
   out_7146165817346037743[442] = 0;
   out_7146165817346037743[443] = 0;
   out_7146165817346037743[444] = 0;
   out_7146165817346037743[445] = 0;
   out_7146165817346037743[446] = 0;
   out_7146165817346037743[447] = 0;
   out_7146165817346037743[448] = 0;
   out_7146165817346037743[449] = 0;
   out_7146165817346037743[450] = 0;
   out_7146165817346037743[451] = 0;
   out_7146165817346037743[452] = 0;
   out_7146165817346037743[453] = 0;
   out_7146165817346037743[454] = 0;
   out_7146165817346037743[455] = 0;
   out_7146165817346037743[456] = 0;
   out_7146165817346037743[457] = 0;
   out_7146165817346037743[458] = 0;
   out_7146165817346037743[459] = 0;
   out_7146165817346037743[460] = 0;
   out_7146165817346037743[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2262751468361150474) {
   out_2262751468361150474[0] = dt*state[7] + state[0];
   out_2262751468361150474[1] = dt*state[8] + state[1];
   out_2262751468361150474[2] = dt*state[9] + state[2];
   out_2262751468361150474[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2262751468361150474[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2262751468361150474[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2262751468361150474[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2262751468361150474[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2262751468361150474[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2262751468361150474[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2262751468361150474[10] = state[10];
   out_2262751468361150474[11] = state[11];
   out_2262751468361150474[12] = state[12];
   out_2262751468361150474[13] = state[13];
   out_2262751468361150474[14] = state[14];
   out_2262751468361150474[15] = state[15];
   out_2262751468361150474[16] = state[16];
   out_2262751468361150474[17] = state[17];
   out_2262751468361150474[18] = state[18];
   out_2262751468361150474[19] = state[19];
   out_2262751468361150474[20] = state[20];
   out_2262751468361150474[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7749511526562044438) {
   out_7749511526562044438[0] = 1;
   out_7749511526562044438[1] = 0;
   out_7749511526562044438[2] = 0;
   out_7749511526562044438[3] = 0;
   out_7749511526562044438[4] = 0;
   out_7749511526562044438[5] = 0;
   out_7749511526562044438[6] = dt;
   out_7749511526562044438[7] = 0;
   out_7749511526562044438[8] = 0;
   out_7749511526562044438[9] = 0;
   out_7749511526562044438[10] = 0;
   out_7749511526562044438[11] = 0;
   out_7749511526562044438[12] = 0;
   out_7749511526562044438[13] = 0;
   out_7749511526562044438[14] = 0;
   out_7749511526562044438[15] = 0;
   out_7749511526562044438[16] = 0;
   out_7749511526562044438[17] = 0;
   out_7749511526562044438[18] = 0;
   out_7749511526562044438[19] = 0;
   out_7749511526562044438[20] = 0;
   out_7749511526562044438[21] = 0;
   out_7749511526562044438[22] = 1;
   out_7749511526562044438[23] = 0;
   out_7749511526562044438[24] = 0;
   out_7749511526562044438[25] = 0;
   out_7749511526562044438[26] = 0;
   out_7749511526562044438[27] = 0;
   out_7749511526562044438[28] = dt;
   out_7749511526562044438[29] = 0;
   out_7749511526562044438[30] = 0;
   out_7749511526562044438[31] = 0;
   out_7749511526562044438[32] = 0;
   out_7749511526562044438[33] = 0;
   out_7749511526562044438[34] = 0;
   out_7749511526562044438[35] = 0;
   out_7749511526562044438[36] = 0;
   out_7749511526562044438[37] = 0;
   out_7749511526562044438[38] = 0;
   out_7749511526562044438[39] = 0;
   out_7749511526562044438[40] = 0;
   out_7749511526562044438[41] = 0;
   out_7749511526562044438[42] = 0;
   out_7749511526562044438[43] = 0;
   out_7749511526562044438[44] = 1;
   out_7749511526562044438[45] = 0;
   out_7749511526562044438[46] = 0;
   out_7749511526562044438[47] = 0;
   out_7749511526562044438[48] = 0;
   out_7749511526562044438[49] = 0;
   out_7749511526562044438[50] = dt;
   out_7749511526562044438[51] = 0;
   out_7749511526562044438[52] = 0;
   out_7749511526562044438[53] = 0;
   out_7749511526562044438[54] = 0;
   out_7749511526562044438[55] = 0;
   out_7749511526562044438[56] = 0;
   out_7749511526562044438[57] = 0;
   out_7749511526562044438[58] = 0;
   out_7749511526562044438[59] = 0;
   out_7749511526562044438[60] = 0;
   out_7749511526562044438[61] = 0;
   out_7749511526562044438[62] = 0;
   out_7749511526562044438[63] = 0;
   out_7749511526562044438[64] = 0;
   out_7749511526562044438[65] = 0;
   out_7749511526562044438[66] = 1;
   out_7749511526562044438[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7749511526562044438[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7749511526562044438[69] = 0;
   out_7749511526562044438[70] = 0;
   out_7749511526562044438[71] = 0;
   out_7749511526562044438[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7749511526562044438[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7749511526562044438[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7749511526562044438[75] = 0;
   out_7749511526562044438[76] = 0;
   out_7749511526562044438[77] = 0;
   out_7749511526562044438[78] = 0;
   out_7749511526562044438[79] = 0;
   out_7749511526562044438[80] = 0;
   out_7749511526562044438[81] = 0;
   out_7749511526562044438[82] = 0;
   out_7749511526562044438[83] = 0;
   out_7749511526562044438[84] = 0;
   out_7749511526562044438[85] = 0;
   out_7749511526562044438[86] = 0;
   out_7749511526562044438[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7749511526562044438[88] = 1;
   out_7749511526562044438[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7749511526562044438[90] = 0;
   out_7749511526562044438[91] = 0;
   out_7749511526562044438[92] = 0;
   out_7749511526562044438[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7749511526562044438[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7749511526562044438[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7749511526562044438[96] = 0;
   out_7749511526562044438[97] = 0;
   out_7749511526562044438[98] = 0;
   out_7749511526562044438[99] = 0;
   out_7749511526562044438[100] = 0;
   out_7749511526562044438[101] = 0;
   out_7749511526562044438[102] = 0;
   out_7749511526562044438[103] = 0;
   out_7749511526562044438[104] = 0;
   out_7749511526562044438[105] = 0;
   out_7749511526562044438[106] = 0;
   out_7749511526562044438[107] = 0;
   out_7749511526562044438[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7749511526562044438[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7749511526562044438[110] = 1;
   out_7749511526562044438[111] = 0;
   out_7749511526562044438[112] = 0;
   out_7749511526562044438[113] = 0;
   out_7749511526562044438[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7749511526562044438[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7749511526562044438[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7749511526562044438[117] = 0;
   out_7749511526562044438[118] = 0;
   out_7749511526562044438[119] = 0;
   out_7749511526562044438[120] = 0;
   out_7749511526562044438[121] = 0;
   out_7749511526562044438[122] = 0;
   out_7749511526562044438[123] = 0;
   out_7749511526562044438[124] = 0;
   out_7749511526562044438[125] = 0;
   out_7749511526562044438[126] = 0;
   out_7749511526562044438[127] = 0;
   out_7749511526562044438[128] = 0;
   out_7749511526562044438[129] = 0;
   out_7749511526562044438[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7749511526562044438[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7749511526562044438[132] = 1;
   out_7749511526562044438[133] = 0;
   out_7749511526562044438[134] = 0;
   out_7749511526562044438[135] = 0;
   out_7749511526562044438[136] = 0;
   out_7749511526562044438[137] = 0;
   out_7749511526562044438[138] = 0;
   out_7749511526562044438[139] = 0;
   out_7749511526562044438[140] = 0;
   out_7749511526562044438[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7749511526562044438[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7749511526562044438[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7749511526562044438[144] = 0;
   out_7749511526562044438[145] = 0;
   out_7749511526562044438[146] = 0;
   out_7749511526562044438[147] = 0;
   out_7749511526562044438[148] = 0;
   out_7749511526562044438[149] = 0;
   out_7749511526562044438[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7749511526562044438[151] = 0;
   out_7749511526562044438[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7749511526562044438[153] = 0;
   out_7749511526562044438[154] = 1;
   out_7749511526562044438[155] = 0;
   out_7749511526562044438[156] = 0;
   out_7749511526562044438[157] = 0;
   out_7749511526562044438[158] = 0;
   out_7749511526562044438[159] = 0;
   out_7749511526562044438[160] = 0;
   out_7749511526562044438[161] = 0;
   out_7749511526562044438[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7749511526562044438[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7749511526562044438[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7749511526562044438[165] = 0;
   out_7749511526562044438[166] = 0;
   out_7749511526562044438[167] = 0;
   out_7749511526562044438[168] = 0;
   out_7749511526562044438[169] = 0;
   out_7749511526562044438[170] = 0;
   out_7749511526562044438[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7749511526562044438[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7749511526562044438[173] = 0;
   out_7749511526562044438[174] = 0;
   out_7749511526562044438[175] = 0;
   out_7749511526562044438[176] = 1;
   out_7749511526562044438[177] = 0;
   out_7749511526562044438[178] = 0;
   out_7749511526562044438[179] = 0;
   out_7749511526562044438[180] = 0;
   out_7749511526562044438[181] = 0;
   out_7749511526562044438[182] = 0;
   out_7749511526562044438[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7749511526562044438[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7749511526562044438[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7749511526562044438[186] = 0;
   out_7749511526562044438[187] = 0;
   out_7749511526562044438[188] = 0;
   out_7749511526562044438[189] = 0;
   out_7749511526562044438[190] = 0;
   out_7749511526562044438[191] = 0;
   out_7749511526562044438[192] = 0;
   out_7749511526562044438[193] = 0;
   out_7749511526562044438[194] = 0;
   out_7749511526562044438[195] = 0;
   out_7749511526562044438[196] = 0;
   out_7749511526562044438[197] = 0;
   out_7749511526562044438[198] = 1;
   out_7749511526562044438[199] = 0;
   out_7749511526562044438[200] = 0;
   out_7749511526562044438[201] = 0;
   out_7749511526562044438[202] = 0;
   out_7749511526562044438[203] = 0;
   out_7749511526562044438[204] = 0;
   out_7749511526562044438[205] = 0;
   out_7749511526562044438[206] = 0;
   out_7749511526562044438[207] = 0;
   out_7749511526562044438[208] = 0;
   out_7749511526562044438[209] = 0;
   out_7749511526562044438[210] = 0;
   out_7749511526562044438[211] = 0;
   out_7749511526562044438[212] = 0;
   out_7749511526562044438[213] = 0;
   out_7749511526562044438[214] = 0;
   out_7749511526562044438[215] = 0;
   out_7749511526562044438[216] = 0;
   out_7749511526562044438[217] = 0;
   out_7749511526562044438[218] = 0;
   out_7749511526562044438[219] = 0;
   out_7749511526562044438[220] = 1;
   out_7749511526562044438[221] = 0;
   out_7749511526562044438[222] = 0;
   out_7749511526562044438[223] = 0;
   out_7749511526562044438[224] = 0;
   out_7749511526562044438[225] = 0;
   out_7749511526562044438[226] = 0;
   out_7749511526562044438[227] = 0;
   out_7749511526562044438[228] = 0;
   out_7749511526562044438[229] = 0;
   out_7749511526562044438[230] = 0;
   out_7749511526562044438[231] = 0;
   out_7749511526562044438[232] = 0;
   out_7749511526562044438[233] = 0;
   out_7749511526562044438[234] = 0;
   out_7749511526562044438[235] = 0;
   out_7749511526562044438[236] = 0;
   out_7749511526562044438[237] = 0;
   out_7749511526562044438[238] = 0;
   out_7749511526562044438[239] = 0;
   out_7749511526562044438[240] = 0;
   out_7749511526562044438[241] = 0;
   out_7749511526562044438[242] = 1;
   out_7749511526562044438[243] = 0;
   out_7749511526562044438[244] = 0;
   out_7749511526562044438[245] = 0;
   out_7749511526562044438[246] = 0;
   out_7749511526562044438[247] = 0;
   out_7749511526562044438[248] = 0;
   out_7749511526562044438[249] = 0;
   out_7749511526562044438[250] = 0;
   out_7749511526562044438[251] = 0;
   out_7749511526562044438[252] = 0;
   out_7749511526562044438[253] = 0;
   out_7749511526562044438[254] = 0;
   out_7749511526562044438[255] = 0;
   out_7749511526562044438[256] = 0;
   out_7749511526562044438[257] = 0;
   out_7749511526562044438[258] = 0;
   out_7749511526562044438[259] = 0;
   out_7749511526562044438[260] = 0;
   out_7749511526562044438[261] = 0;
   out_7749511526562044438[262] = 0;
   out_7749511526562044438[263] = 0;
   out_7749511526562044438[264] = 1;
   out_7749511526562044438[265] = 0;
   out_7749511526562044438[266] = 0;
   out_7749511526562044438[267] = 0;
   out_7749511526562044438[268] = 0;
   out_7749511526562044438[269] = 0;
   out_7749511526562044438[270] = 0;
   out_7749511526562044438[271] = 0;
   out_7749511526562044438[272] = 0;
   out_7749511526562044438[273] = 0;
   out_7749511526562044438[274] = 0;
   out_7749511526562044438[275] = 0;
   out_7749511526562044438[276] = 0;
   out_7749511526562044438[277] = 0;
   out_7749511526562044438[278] = 0;
   out_7749511526562044438[279] = 0;
   out_7749511526562044438[280] = 0;
   out_7749511526562044438[281] = 0;
   out_7749511526562044438[282] = 0;
   out_7749511526562044438[283] = 0;
   out_7749511526562044438[284] = 0;
   out_7749511526562044438[285] = 0;
   out_7749511526562044438[286] = 1;
   out_7749511526562044438[287] = 0;
   out_7749511526562044438[288] = 0;
   out_7749511526562044438[289] = 0;
   out_7749511526562044438[290] = 0;
   out_7749511526562044438[291] = 0;
   out_7749511526562044438[292] = 0;
   out_7749511526562044438[293] = 0;
   out_7749511526562044438[294] = 0;
   out_7749511526562044438[295] = 0;
   out_7749511526562044438[296] = 0;
   out_7749511526562044438[297] = 0;
   out_7749511526562044438[298] = 0;
   out_7749511526562044438[299] = 0;
   out_7749511526562044438[300] = 0;
   out_7749511526562044438[301] = 0;
   out_7749511526562044438[302] = 0;
   out_7749511526562044438[303] = 0;
   out_7749511526562044438[304] = 0;
   out_7749511526562044438[305] = 0;
   out_7749511526562044438[306] = 0;
   out_7749511526562044438[307] = 0;
   out_7749511526562044438[308] = 1;
   out_7749511526562044438[309] = 0;
   out_7749511526562044438[310] = 0;
   out_7749511526562044438[311] = 0;
   out_7749511526562044438[312] = 0;
   out_7749511526562044438[313] = 0;
   out_7749511526562044438[314] = 0;
   out_7749511526562044438[315] = 0;
   out_7749511526562044438[316] = 0;
   out_7749511526562044438[317] = 0;
   out_7749511526562044438[318] = 0;
   out_7749511526562044438[319] = 0;
   out_7749511526562044438[320] = 0;
   out_7749511526562044438[321] = 0;
   out_7749511526562044438[322] = 0;
   out_7749511526562044438[323] = 0;
   out_7749511526562044438[324] = 0;
   out_7749511526562044438[325] = 0;
   out_7749511526562044438[326] = 0;
   out_7749511526562044438[327] = 0;
   out_7749511526562044438[328] = 0;
   out_7749511526562044438[329] = 0;
   out_7749511526562044438[330] = 1;
   out_7749511526562044438[331] = 0;
   out_7749511526562044438[332] = 0;
   out_7749511526562044438[333] = 0;
   out_7749511526562044438[334] = 0;
   out_7749511526562044438[335] = 0;
   out_7749511526562044438[336] = 0;
   out_7749511526562044438[337] = 0;
   out_7749511526562044438[338] = 0;
   out_7749511526562044438[339] = 0;
   out_7749511526562044438[340] = 0;
   out_7749511526562044438[341] = 0;
   out_7749511526562044438[342] = 0;
   out_7749511526562044438[343] = 0;
   out_7749511526562044438[344] = 0;
   out_7749511526562044438[345] = 0;
   out_7749511526562044438[346] = 0;
   out_7749511526562044438[347] = 0;
   out_7749511526562044438[348] = 0;
   out_7749511526562044438[349] = 0;
   out_7749511526562044438[350] = 0;
   out_7749511526562044438[351] = 0;
   out_7749511526562044438[352] = 1;
   out_7749511526562044438[353] = 0;
   out_7749511526562044438[354] = 0;
   out_7749511526562044438[355] = 0;
   out_7749511526562044438[356] = 0;
   out_7749511526562044438[357] = 0;
   out_7749511526562044438[358] = 0;
   out_7749511526562044438[359] = 0;
   out_7749511526562044438[360] = 0;
   out_7749511526562044438[361] = 0;
   out_7749511526562044438[362] = 0;
   out_7749511526562044438[363] = 0;
   out_7749511526562044438[364] = 0;
   out_7749511526562044438[365] = 0;
   out_7749511526562044438[366] = 0;
   out_7749511526562044438[367] = 0;
   out_7749511526562044438[368] = 0;
   out_7749511526562044438[369] = 0;
   out_7749511526562044438[370] = 0;
   out_7749511526562044438[371] = 0;
   out_7749511526562044438[372] = 0;
   out_7749511526562044438[373] = 0;
   out_7749511526562044438[374] = 1;
   out_7749511526562044438[375] = 0;
   out_7749511526562044438[376] = 0;
   out_7749511526562044438[377] = 0;
   out_7749511526562044438[378] = 0;
   out_7749511526562044438[379] = 0;
   out_7749511526562044438[380] = 0;
   out_7749511526562044438[381] = 0;
   out_7749511526562044438[382] = 0;
   out_7749511526562044438[383] = 0;
   out_7749511526562044438[384] = 0;
   out_7749511526562044438[385] = 0;
   out_7749511526562044438[386] = 0;
   out_7749511526562044438[387] = 0;
   out_7749511526562044438[388] = 0;
   out_7749511526562044438[389] = 0;
   out_7749511526562044438[390] = 0;
   out_7749511526562044438[391] = 0;
   out_7749511526562044438[392] = 0;
   out_7749511526562044438[393] = 0;
   out_7749511526562044438[394] = 0;
   out_7749511526562044438[395] = 0;
   out_7749511526562044438[396] = 1;
   out_7749511526562044438[397] = 0;
   out_7749511526562044438[398] = 0;
   out_7749511526562044438[399] = 0;
   out_7749511526562044438[400] = 0;
   out_7749511526562044438[401] = 0;
   out_7749511526562044438[402] = 0;
   out_7749511526562044438[403] = 0;
   out_7749511526562044438[404] = 0;
   out_7749511526562044438[405] = 0;
   out_7749511526562044438[406] = 0;
   out_7749511526562044438[407] = 0;
   out_7749511526562044438[408] = 0;
   out_7749511526562044438[409] = 0;
   out_7749511526562044438[410] = 0;
   out_7749511526562044438[411] = 0;
   out_7749511526562044438[412] = 0;
   out_7749511526562044438[413] = 0;
   out_7749511526562044438[414] = 0;
   out_7749511526562044438[415] = 0;
   out_7749511526562044438[416] = 0;
   out_7749511526562044438[417] = 0;
   out_7749511526562044438[418] = 1;
   out_7749511526562044438[419] = 0;
   out_7749511526562044438[420] = 0;
   out_7749511526562044438[421] = 0;
   out_7749511526562044438[422] = 0;
   out_7749511526562044438[423] = 0;
   out_7749511526562044438[424] = 0;
   out_7749511526562044438[425] = 0;
   out_7749511526562044438[426] = 0;
   out_7749511526562044438[427] = 0;
   out_7749511526562044438[428] = 0;
   out_7749511526562044438[429] = 0;
   out_7749511526562044438[430] = 0;
   out_7749511526562044438[431] = 0;
   out_7749511526562044438[432] = 0;
   out_7749511526562044438[433] = 0;
   out_7749511526562044438[434] = 0;
   out_7749511526562044438[435] = 0;
   out_7749511526562044438[436] = 0;
   out_7749511526562044438[437] = 0;
   out_7749511526562044438[438] = 0;
   out_7749511526562044438[439] = 0;
   out_7749511526562044438[440] = 1;
}
void h_4(double *state, double *unused, double *out_9007062715361016091) {
   out_9007062715361016091[0] = state[10] + state[13];
   out_9007062715361016091[1] = state[11] + state[14];
   out_9007062715361016091[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7471456318502086351) {
   out_7471456318502086351[0] = 0;
   out_7471456318502086351[1] = 0;
   out_7471456318502086351[2] = 0;
   out_7471456318502086351[3] = 0;
   out_7471456318502086351[4] = 0;
   out_7471456318502086351[5] = 0;
   out_7471456318502086351[6] = 0;
   out_7471456318502086351[7] = 0;
   out_7471456318502086351[8] = 0;
   out_7471456318502086351[9] = 0;
   out_7471456318502086351[10] = 1;
   out_7471456318502086351[11] = 0;
   out_7471456318502086351[12] = 0;
   out_7471456318502086351[13] = 1;
   out_7471456318502086351[14] = 0;
   out_7471456318502086351[15] = 0;
   out_7471456318502086351[16] = 0;
   out_7471456318502086351[17] = 0;
   out_7471456318502086351[18] = 0;
   out_7471456318502086351[19] = 0;
   out_7471456318502086351[20] = 0;
   out_7471456318502086351[21] = 0;
   out_7471456318502086351[22] = 0;
   out_7471456318502086351[23] = 0;
   out_7471456318502086351[24] = 0;
   out_7471456318502086351[25] = 0;
   out_7471456318502086351[26] = 0;
   out_7471456318502086351[27] = 0;
   out_7471456318502086351[28] = 0;
   out_7471456318502086351[29] = 0;
   out_7471456318502086351[30] = 0;
   out_7471456318502086351[31] = 0;
   out_7471456318502086351[32] = 0;
   out_7471456318502086351[33] = 1;
   out_7471456318502086351[34] = 0;
   out_7471456318502086351[35] = 0;
   out_7471456318502086351[36] = 1;
   out_7471456318502086351[37] = 0;
   out_7471456318502086351[38] = 0;
   out_7471456318502086351[39] = 0;
   out_7471456318502086351[40] = 0;
   out_7471456318502086351[41] = 0;
   out_7471456318502086351[42] = 0;
   out_7471456318502086351[43] = 0;
   out_7471456318502086351[44] = 0;
   out_7471456318502086351[45] = 0;
   out_7471456318502086351[46] = 0;
   out_7471456318502086351[47] = 0;
   out_7471456318502086351[48] = 0;
   out_7471456318502086351[49] = 0;
   out_7471456318502086351[50] = 0;
   out_7471456318502086351[51] = 0;
   out_7471456318502086351[52] = 0;
   out_7471456318502086351[53] = 0;
   out_7471456318502086351[54] = 0;
   out_7471456318502086351[55] = 0;
   out_7471456318502086351[56] = 1;
   out_7471456318502086351[57] = 0;
   out_7471456318502086351[58] = 0;
   out_7471456318502086351[59] = 1;
   out_7471456318502086351[60] = 0;
   out_7471456318502086351[61] = 0;
   out_7471456318502086351[62] = 0;
   out_7471456318502086351[63] = 0;
   out_7471456318502086351[64] = 0;
   out_7471456318502086351[65] = 0;
}
void h_9(double *state, double *unused, double *out_9115699719530867729) {
   out_9115699719530867729[0] = state[10];
   out_9115699719530867729[1] = state[11];
   out_9115699719530867729[2] = state[12];
}
void H_9(double *state, double *unused, double *out_184237383237638881) {
   out_184237383237638881[0] = 0;
   out_184237383237638881[1] = 0;
   out_184237383237638881[2] = 0;
   out_184237383237638881[3] = 0;
   out_184237383237638881[4] = 0;
   out_184237383237638881[5] = 0;
   out_184237383237638881[6] = 0;
   out_184237383237638881[7] = 0;
   out_184237383237638881[8] = 0;
   out_184237383237638881[9] = 0;
   out_184237383237638881[10] = 1;
   out_184237383237638881[11] = 0;
   out_184237383237638881[12] = 0;
   out_184237383237638881[13] = 0;
   out_184237383237638881[14] = 0;
   out_184237383237638881[15] = 0;
   out_184237383237638881[16] = 0;
   out_184237383237638881[17] = 0;
   out_184237383237638881[18] = 0;
   out_184237383237638881[19] = 0;
   out_184237383237638881[20] = 0;
   out_184237383237638881[21] = 0;
   out_184237383237638881[22] = 0;
   out_184237383237638881[23] = 0;
   out_184237383237638881[24] = 0;
   out_184237383237638881[25] = 0;
   out_184237383237638881[26] = 0;
   out_184237383237638881[27] = 0;
   out_184237383237638881[28] = 0;
   out_184237383237638881[29] = 0;
   out_184237383237638881[30] = 0;
   out_184237383237638881[31] = 0;
   out_184237383237638881[32] = 0;
   out_184237383237638881[33] = 1;
   out_184237383237638881[34] = 0;
   out_184237383237638881[35] = 0;
   out_184237383237638881[36] = 0;
   out_184237383237638881[37] = 0;
   out_184237383237638881[38] = 0;
   out_184237383237638881[39] = 0;
   out_184237383237638881[40] = 0;
   out_184237383237638881[41] = 0;
   out_184237383237638881[42] = 0;
   out_184237383237638881[43] = 0;
   out_184237383237638881[44] = 0;
   out_184237383237638881[45] = 0;
   out_184237383237638881[46] = 0;
   out_184237383237638881[47] = 0;
   out_184237383237638881[48] = 0;
   out_184237383237638881[49] = 0;
   out_184237383237638881[50] = 0;
   out_184237383237638881[51] = 0;
   out_184237383237638881[52] = 0;
   out_184237383237638881[53] = 0;
   out_184237383237638881[54] = 0;
   out_184237383237638881[55] = 0;
   out_184237383237638881[56] = 1;
   out_184237383237638881[57] = 0;
   out_184237383237638881[58] = 0;
   out_184237383237638881[59] = 0;
   out_184237383237638881[60] = 0;
   out_184237383237638881[61] = 0;
   out_184237383237638881[62] = 0;
   out_184237383237638881[63] = 0;
   out_184237383237638881[64] = 0;
   out_184237383237638881[65] = 0;
}
void h_10(double *state, double *unused, double *out_2755636301544987966) {
   out_2755636301544987966[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2755636301544987966[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2755636301544987966[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7945717824255188420) {
   out_7945717824255188420[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7945717824255188420[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7945717824255188420[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7945717824255188420[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7945717824255188420[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7945717824255188420[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7945717824255188420[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7945717824255188420[7] = 0;
   out_7945717824255188420[8] = 0;
   out_7945717824255188420[9] = 0;
   out_7945717824255188420[10] = 0;
   out_7945717824255188420[11] = 0;
   out_7945717824255188420[12] = 0;
   out_7945717824255188420[13] = 0;
   out_7945717824255188420[14] = 0;
   out_7945717824255188420[15] = 0;
   out_7945717824255188420[16] = 1;
   out_7945717824255188420[17] = 0;
   out_7945717824255188420[18] = 0;
   out_7945717824255188420[19] = 1;
   out_7945717824255188420[20] = 0;
   out_7945717824255188420[21] = 0;
   out_7945717824255188420[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7945717824255188420[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7945717824255188420[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7945717824255188420[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7945717824255188420[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7945717824255188420[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7945717824255188420[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7945717824255188420[29] = 0;
   out_7945717824255188420[30] = 0;
   out_7945717824255188420[31] = 0;
   out_7945717824255188420[32] = 0;
   out_7945717824255188420[33] = 0;
   out_7945717824255188420[34] = 0;
   out_7945717824255188420[35] = 0;
   out_7945717824255188420[36] = 0;
   out_7945717824255188420[37] = 0;
   out_7945717824255188420[38] = 0;
   out_7945717824255188420[39] = 1;
   out_7945717824255188420[40] = 0;
   out_7945717824255188420[41] = 0;
   out_7945717824255188420[42] = 1;
   out_7945717824255188420[43] = 0;
   out_7945717824255188420[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7945717824255188420[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7945717824255188420[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7945717824255188420[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7945717824255188420[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7945717824255188420[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7945717824255188420[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7945717824255188420[51] = 0;
   out_7945717824255188420[52] = 0;
   out_7945717824255188420[53] = 0;
   out_7945717824255188420[54] = 0;
   out_7945717824255188420[55] = 0;
   out_7945717824255188420[56] = 0;
   out_7945717824255188420[57] = 0;
   out_7945717824255188420[58] = 0;
   out_7945717824255188420[59] = 0;
   out_7945717824255188420[60] = 0;
   out_7945717824255188420[61] = 0;
   out_7945717824255188420[62] = 1;
   out_7945717824255188420[63] = 0;
   out_7945717824255188420[64] = 0;
   out_7945717824255188420[65] = 1;
}
void h_12(double *state, double *unused, double *out_1783803183341343539) {
   out_1783803183341343539[0] = state[0];
   out_1783803183341343539[1] = state[1];
   out_1783803183341343539[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4594029378164732269) {
   out_4594029378164732269[0] = 1;
   out_4594029378164732269[1] = 0;
   out_4594029378164732269[2] = 0;
   out_4594029378164732269[3] = 0;
   out_4594029378164732269[4] = 0;
   out_4594029378164732269[5] = 0;
   out_4594029378164732269[6] = 0;
   out_4594029378164732269[7] = 0;
   out_4594029378164732269[8] = 0;
   out_4594029378164732269[9] = 0;
   out_4594029378164732269[10] = 0;
   out_4594029378164732269[11] = 0;
   out_4594029378164732269[12] = 0;
   out_4594029378164732269[13] = 0;
   out_4594029378164732269[14] = 0;
   out_4594029378164732269[15] = 0;
   out_4594029378164732269[16] = 0;
   out_4594029378164732269[17] = 0;
   out_4594029378164732269[18] = 0;
   out_4594029378164732269[19] = 0;
   out_4594029378164732269[20] = 0;
   out_4594029378164732269[21] = 0;
   out_4594029378164732269[22] = 0;
   out_4594029378164732269[23] = 1;
   out_4594029378164732269[24] = 0;
   out_4594029378164732269[25] = 0;
   out_4594029378164732269[26] = 0;
   out_4594029378164732269[27] = 0;
   out_4594029378164732269[28] = 0;
   out_4594029378164732269[29] = 0;
   out_4594029378164732269[30] = 0;
   out_4594029378164732269[31] = 0;
   out_4594029378164732269[32] = 0;
   out_4594029378164732269[33] = 0;
   out_4594029378164732269[34] = 0;
   out_4594029378164732269[35] = 0;
   out_4594029378164732269[36] = 0;
   out_4594029378164732269[37] = 0;
   out_4594029378164732269[38] = 0;
   out_4594029378164732269[39] = 0;
   out_4594029378164732269[40] = 0;
   out_4594029378164732269[41] = 0;
   out_4594029378164732269[42] = 0;
   out_4594029378164732269[43] = 0;
   out_4594029378164732269[44] = 0;
   out_4594029378164732269[45] = 0;
   out_4594029378164732269[46] = 1;
   out_4594029378164732269[47] = 0;
   out_4594029378164732269[48] = 0;
   out_4594029378164732269[49] = 0;
   out_4594029378164732269[50] = 0;
   out_4594029378164732269[51] = 0;
   out_4594029378164732269[52] = 0;
   out_4594029378164732269[53] = 0;
   out_4594029378164732269[54] = 0;
   out_4594029378164732269[55] = 0;
   out_4594029378164732269[56] = 0;
   out_4594029378164732269[57] = 0;
   out_4594029378164732269[58] = 0;
   out_4594029378164732269[59] = 0;
   out_4594029378164732269[60] = 0;
   out_4594029378164732269[61] = 0;
   out_4594029378164732269[62] = 0;
   out_4594029378164732269[63] = 0;
   out_4594029378164732269[64] = 0;
   out_4594029378164732269[65] = 0;
}
void h_31(double *state, double *unused, double *out_4590535298572725627) {
   out_4590535298572725627[0] = state[7];
   out_4590535298572725627[1] = state[8];
   out_4590535298572725627[2] = state[9];
}
void H_31(double *state, double *unused, double *out_293563121854889153) {
   out_293563121854889153[0] = 0;
   out_293563121854889153[1] = 0;
   out_293563121854889153[2] = 0;
   out_293563121854889153[3] = 0;
   out_293563121854889153[4] = 0;
   out_293563121854889153[5] = 0;
   out_293563121854889153[6] = 0;
   out_293563121854889153[7] = 1;
   out_293563121854889153[8] = 0;
   out_293563121854889153[9] = 0;
   out_293563121854889153[10] = 0;
   out_293563121854889153[11] = 0;
   out_293563121854889153[12] = 0;
   out_293563121854889153[13] = 0;
   out_293563121854889153[14] = 0;
   out_293563121854889153[15] = 0;
   out_293563121854889153[16] = 0;
   out_293563121854889153[17] = 0;
   out_293563121854889153[18] = 0;
   out_293563121854889153[19] = 0;
   out_293563121854889153[20] = 0;
   out_293563121854889153[21] = 0;
   out_293563121854889153[22] = 0;
   out_293563121854889153[23] = 0;
   out_293563121854889153[24] = 0;
   out_293563121854889153[25] = 0;
   out_293563121854889153[26] = 0;
   out_293563121854889153[27] = 0;
   out_293563121854889153[28] = 0;
   out_293563121854889153[29] = 0;
   out_293563121854889153[30] = 1;
   out_293563121854889153[31] = 0;
   out_293563121854889153[32] = 0;
   out_293563121854889153[33] = 0;
   out_293563121854889153[34] = 0;
   out_293563121854889153[35] = 0;
   out_293563121854889153[36] = 0;
   out_293563121854889153[37] = 0;
   out_293563121854889153[38] = 0;
   out_293563121854889153[39] = 0;
   out_293563121854889153[40] = 0;
   out_293563121854889153[41] = 0;
   out_293563121854889153[42] = 0;
   out_293563121854889153[43] = 0;
   out_293563121854889153[44] = 0;
   out_293563121854889153[45] = 0;
   out_293563121854889153[46] = 0;
   out_293563121854889153[47] = 0;
   out_293563121854889153[48] = 0;
   out_293563121854889153[49] = 0;
   out_293563121854889153[50] = 0;
   out_293563121854889153[51] = 0;
   out_293563121854889153[52] = 0;
   out_293563121854889153[53] = 1;
   out_293563121854889153[54] = 0;
   out_293563121854889153[55] = 0;
   out_293563121854889153[56] = 0;
   out_293563121854889153[57] = 0;
   out_293563121854889153[58] = 0;
   out_293563121854889153[59] = 0;
   out_293563121854889153[60] = 0;
   out_293563121854889153[61] = 0;
   out_293563121854889153[62] = 0;
   out_293563121854889153[63] = 0;
   out_293563121854889153[64] = 0;
   out_293563121854889153[65] = 0;
}
void h_32(double *state, double *unused, double *out_4586094836937765954) {
   out_4586094836937765954[0] = state[3];
   out_4586094836937765954[1] = state[4];
   out_4586094836937765954[2] = state[5];
   out_4586094836937765954[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8323493498801388045) {
   out_8323493498801388045[0] = 0;
   out_8323493498801388045[1] = 0;
   out_8323493498801388045[2] = 0;
   out_8323493498801388045[3] = 1;
   out_8323493498801388045[4] = 0;
   out_8323493498801388045[5] = 0;
   out_8323493498801388045[6] = 0;
   out_8323493498801388045[7] = 0;
   out_8323493498801388045[8] = 0;
   out_8323493498801388045[9] = 0;
   out_8323493498801388045[10] = 0;
   out_8323493498801388045[11] = 0;
   out_8323493498801388045[12] = 0;
   out_8323493498801388045[13] = 0;
   out_8323493498801388045[14] = 0;
   out_8323493498801388045[15] = 0;
   out_8323493498801388045[16] = 0;
   out_8323493498801388045[17] = 0;
   out_8323493498801388045[18] = 0;
   out_8323493498801388045[19] = 0;
   out_8323493498801388045[20] = 0;
   out_8323493498801388045[21] = 0;
   out_8323493498801388045[22] = 0;
   out_8323493498801388045[23] = 0;
   out_8323493498801388045[24] = 0;
   out_8323493498801388045[25] = 0;
   out_8323493498801388045[26] = 1;
   out_8323493498801388045[27] = 0;
   out_8323493498801388045[28] = 0;
   out_8323493498801388045[29] = 0;
   out_8323493498801388045[30] = 0;
   out_8323493498801388045[31] = 0;
   out_8323493498801388045[32] = 0;
   out_8323493498801388045[33] = 0;
   out_8323493498801388045[34] = 0;
   out_8323493498801388045[35] = 0;
   out_8323493498801388045[36] = 0;
   out_8323493498801388045[37] = 0;
   out_8323493498801388045[38] = 0;
   out_8323493498801388045[39] = 0;
   out_8323493498801388045[40] = 0;
   out_8323493498801388045[41] = 0;
   out_8323493498801388045[42] = 0;
   out_8323493498801388045[43] = 0;
   out_8323493498801388045[44] = 0;
   out_8323493498801388045[45] = 0;
   out_8323493498801388045[46] = 0;
   out_8323493498801388045[47] = 0;
   out_8323493498801388045[48] = 0;
   out_8323493498801388045[49] = 1;
   out_8323493498801388045[50] = 0;
   out_8323493498801388045[51] = 0;
   out_8323493498801388045[52] = 0;
   out_8323493498801388045[53] = 0;
   out_8323493498801388045[54] = 0;
   out_8323493498801388045[55] = 0;
   out_8323493498801388045[56] = 0;
   out_8323493498801388045[57] = 0;
   out_8323493498801388045[58] = 0;
   out_8323493498801388045[59] = 0;
   out_8323493498801388045[60] = 0;
   out_8323493498801388045[61] = 0;
   out_8323493498801388045[62] = 0;
   out_8323493498801388045[63] = 0;
   out_8323493498801388045[64] = 0;
   out_8323493498801388045[65] = 0;
   out_8323493498801388045[66] = 0;
   out_8323493498801388045[67] = 0;
   out_8323493498801388045[68] = 0;
   out_8323493498801388045[69] = 0;
   out_8323493498801388045[70] = 0;
   out_8323493498801388045[71] = 0;
   out_8323493498801388045[72] = 1;
   out_8323493498801388045[73] = 0;
   out_8323493498801388045[74] = 0;
   out_8323493498801388045[75] = 0;
   out_8323493498801388045[76] = 0;
   out_8323493498801388045[77] = 0;
   out_8323493498801388045[78] = 0;
   out_8323493498801388045[79] = 0;
   out_8323493498801388045[80] = 0;
   out_8323493498801388045[81] = 0;
   out_8323493498801388045[82] = 0;
   out_8323493498801388045[83] = 0;
   out_8323493498801388045[84] = 0;
   out_8323493498801388045[85] = 0;
   out_8323493498801388045[86] = 0;
   out_8323493498801388045[87] = 0;
}
void h_13(double *state, double *unused, double *out_6216853385747818522) {
   out_6216853385747818522[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6216853385747818522[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6216853385747818522[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3463561509396612115) {
   out_3463561509396612115[0] = 0;
   out_3463561509396612115[1] = 0;
   out_3463561509396612115[2] = 0;
   out_3463561509396612115[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3463561509396612115[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3463561509396612115[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3463561509396612115[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3463561509396612115[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3463561509396612115[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3463561509396612115[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3463561509396612115[10] = 0;
   out_3463561509396612115[11] = 0;
   out_3463561509396612115[12] = 0;
   out_3463561509396612115[13] = 0;
   out_3463561509396612115[14] = 0;
   out_3463561509396612115[15] = 0;
   out_3463561509396612115[16] = 0;
   out_3463561509396612115[17] = 0;
   out_3463561509396612115[18] = 0;
   out_3463561509396612115[19] = 0;
   out_3463561509396612115[20] = 0;
   out_3463561509396612115[21] = 0;
   out_3463561509396612115[22] = 0;
   out_3463561509396612115[23] = 0;
   out_3463561509396612115[24] = 0;
   out_3463561509396612115[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3463561509396612115[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3463561509396612115[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3463561509396612115[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3463561509396612115[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3463561509396612115[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3463561509396612115[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3463561509396612115[32] = 0;
   out_3463561509396612115[33] = 0;
   out_3463561509396612115[34] = 0;
   out_3463561509396612115[35] = 0;
   out_3463561509396612115[36] = 0;
   out_3463561509396612115[37] = 0;
   out_3463561509396612115[38] = 0;
   out_3463561509396612115[39] = 0;
   out_3463561509396612115[40] = 0;
   out_3463561509396612115[41] = 0;
   out_3463561509396612115[42] = 0;
   out_3463561509396612115[43] = 0;
   out_3463561509396612115[44] = 0;
   out_3463561509396612115[45] = 0;
   out_3463561509396612115[46] = 0;
   out_3463561509396612115[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3463561509396612115[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3463561509396612115[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3463561509396612115[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3463561509396612115[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3463561509396612115[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3463561509396612115[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3463561509396612115[54] = 0;
   out_3463561509396612115[55] = 0;
   out_3463561509396612115[56] = 0;
   out_3463561509396612115[57] = 0;
   out_3463561509396612115[58] = 0;
   out_3463561509396612115[59] = 0;
   out_3463561509396612115[60] = 0;
   out_3463561509396612115[61] = 0;
   out_3463561509396612115[62] = 0;
   out_3463561509396612115[63] = 0;
   out_3463561509396612115[64] = 0;
   out_3463561509396612115[65] = 0;
}
void h_14(double *state, double *unused, double *out_9115699719530867729) {
   out_9115699719530867729[0] = state[10];
   out_9115699719530867729[1] = state[11];
   out_9115699719530867729[2] = state[12];
}
void H_14(double *state, double *unused, double *out_184237383237638881) {
   out_184237383237638881[0] = 0;
   out_184237383237638881[1] = 0;
   out_184237383237638881[2] = 0;
   out_184237383237638881[3] = 0;
   out_184237383237638881[4] = 0;
   out_184237383237638881[5] = 0;
   out_184237383237638881[6] = 0;
   out_184237383237638881[7] = 0;
   out_184237383237638881[8] = 0;
   out_184237383237638881[9] = 0;
   out_184237383237638881[10] = 1;
   out_184237383237638881[11] = 0;
   out_184237383237638881[12] = 0;
   out_184237383237638881[13] = 0;
   out_184237383237638881[14] = 0;
   out_184237383237638881[15] = 0;
   out_184237383237638881[16] = 0;
   out_184237383237638881[17] = 0;
   out_184237383237638881[18] = 0;
   out_184237383237638881[19] = 0;
   out_184237383237638881[20] = 0;
   out_184237383237638881[21] = 0;
   out_184237383237638881[22] = 0;
   out_184237383237638881[23] = 0;
   out_184237383237638881[24] = 0;
   out_184237383237638881[25] = 0;
   out_184237383237638881[26] = 0;
   out_184237383237638881[27] = 0;
   out_184237383237638881[28] = 0;
   out_184237383237638881[29] = 0;
   out_184237383237638881[30] = 0;
   out_184237383237638881[31] = 0;
   out_184237383237638881[32] = 0;
   out_184237383237638881[33] = 1;
   out_184237383237638881[34] = 0;
   out_184237383237638881[35] = 0;
   out_184237383237638881[36] = 0;
   out_184237383237638881[37] = 0;
   out_184237383237638881[38] = 0;
   out_184237383237638881[39] = 0;
   out_184237383237638881[40] = 0;
   out_184237383237638881[41] = 0;
   out_184237383237638881[42] = 0;
   out_184237383237638881[43] = 0;
   out_184237383237638881[44] = 0;
   out_184237383237638881[45] = 0;
   out_184237383237638881[46] = 0;
   out_184237383237638881[47] = 0;
   out_184237383237638881[48] = 0;
   out_184237383237638881[49] = 0;
   out_184237383237638881[50] = 0;
   out_184237383237638881[51] = 0;
   out_184237383237638881[52] = 0;
   out_184237383237638881[53] = 0;
   out_184237383237638881[54] = 0;
   out_184237383237638881[55] = 0;
   out_184237383237638881[56] = 1;
   out_184237383237638881[57] = 0;
   out_184237383237638881[58] = 0;
   out_184237383237638881[59] = 0;
   out_184237383237638881[60] = 0;
   out_184237383237638881[61] = 0;
   out_184237383237638881[62] = 0;
   out_184237383237638881[63] = 0;
   out_184237383237638881[64] = 0;
   out_184237383237638881[65] = 0;
}
void h_33(double *state, double *unused, double *out_1564424883571661231) {
   out_1564424883571661231[0] = state[16];
   out_1564424883571661231[1] = state[17];
   out_1564424883571661231[2] = state[18];
}
void H_33(double *state, double *unused, double *out_954237256490621371) {
   out_954237256490621371[0] = 0;
   out_954237256490621371[1] = 0;
   out_954237256490621371[2] = 0;
   out_954237256490621371[3] = 0;
   out_954237256490621371[4] = 0;
   out_954237256490621371[5] = 0;
   out_954237256490621371[6] = 0;
   out_954237256490621371[7] = 0;
   out_954237256490621371[8] = 0;
   out_954237256490621371[9] = 0;
   out_954237256490621371[10] = 0;
   out_954237256490621371[11] = 0;
   out_954237256490621371[12] = 0;
   out_954237256490621371[13] = 0;
   out_954237256490621371[14] = 0;
   out_954237256490621371[15] = 0;
   out_954237256490621371[16] = 1;
   out_954237256490621371[17] = 0;
   out_954237256490621371[18] = 0;
   out_954237256490621371[19] = 0;
   out_954237256490621371[20] = 0;
   out_954237256490621371[21] = 0;
   out_954237256490621371[22] = 0;
   out_954237256490621371[23] = 0;
   out_954237256490621371[24] = 0;
   out_954237256490621371[25] = 0;
   out_954237256490621371[26] = 0;
   out_954237256490621371[27] = 0;
   out_954237256490621371[28] = 0;
   out_954237256490621371[29] = 0;
   out_954237256490621371[30] = 0;
   out_954237256490621371[31] = 0;
   out_954237256490621371[32] = 0;
   out_954237256490621371[33] = 0;
   out_954237256490621371[34] = 0;
   out_954237256490621371[35] = 0;
   out_954237256490621371[36] = 0;
   out_954237256490621371[37] = 0;
   out_954237256490621371[38] = 0;
   out_954237256490621371[39] = 1;
   out_954237256490621371[40] = 0;
   out_954237256490621371[41] = 0;
   out_954237256490621371[42] = 0;
   out_954237256490621371[43] = 0;
   out_954237256490621371[44] = 0;
   out_954237256490621371[45] = 0;
   out_954237256490621371[46] = 0;
   out_954237256490621371[47] = 0;
   out_954237256490621371[48] = 0;
   out_954237256490621371[49] = 0;
   out_954237256490621371[50] = 0;
   out_954237256490621371[51] = 0;
   out_954237256490621371[52] = 0;
   out_954237256490621371[53] = 0;
   out_954237256490621371[54] = 0;
   out_954237256490621371[55] = 0;
   out_954237256490621371[56] = 0;
   out_954237256490621371[57] = 0;
   out_954237256490621371[58] = 0;
   out_954237256490621371[59] = 0;
   out_954237256490621371[60] = 0;
   out_954237256490621371[61] = 0;
   out_954237256490621371[62] = 1;
   out_954237256490621371[63] = 0;
   out_954237256490621371[64] = 0;
   out_954237256490621371[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7309746982530501858) {
  H(in_vec, out_7309746982530501858);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5779196364896740181) {
  err_fun(nom_x, delta_x, out_5779196364896740181);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4961782207135168051) {
  inv_err_fun(nom_x, true_x, out_4961782207135168051);
}
void live_H_mod_fun(double *state, double *out_7146165817346037743) {
  H_mod_fun(state, out_7146165817346037743);
}
void live_f_fun(double *state, double dt, double *out_2262751468361150474) {
  f_fun(state,  dt, out_2262751468361150474);
}
void live_F_fun(double *state, double dt, double *out_7749511526562044438) {
  F_fun(state,  dt, out_7749511526562044438);
}
void live_h_4(double *state, double *unused, double *out_9007062715361016091) {
  h_4(state, unused, out_9007062715361016091);
}
void live_H_4(double *state, double *unused, double *out_7471456318502086351) {
  H_4(state, unused, out_7471456318502086351);
}
void live_h_9(double *state, double *unused, double *out_9115699719530867729) {
  h_9(state, unused, out_9115699719530867729);
}
void live_H_9(double *state, double *unused, double *out_184237383237638881) {
  H_9(state, unused, out_184237383237638881);
}
void live_h_10(double *state, double *unused, double *out_2755636301544987966) {
  h_10(state, unused, out_2755636301544987966);
}
void live_H_10(double *state, double *unused, double *out_7945717824255188420) {
  H_10(state, unused, out_7945717824255188420);
}
void live_h_12(double *state, double *unused, double *out_1783803183341343539) {
  h_12(state, unused, out_1783803183341343539);
}
void live_H_12(double *state, double *unused, double *out_4594029378164732269) {
  H_12(state, unused, out_4594029378164732269);
}
void live_h_31(double *state, double *unused, double *out_4590535298572725627) {
  h_31(state, unused, out_4590535298572725627);
}
void live_H_31(double *state, double *unused, double *out_293563121854889153) {
  H_31(state, unused, out_293563121854889153);
}
void live_h_32(double *state, double *unused, double *out_4586094836937765954) {
  h_32(state, unused, out_4586094836937765954);
}
void live_H_32(double *state, double *unused, double *out_8323493498801388045) {
  H_32(state, unused, out_8323493498801388045);
}
void live_h_13(double *state, double *unused, double *out_6216853385747818522) {
  h_13(state, unused, out_6216853385747818522);
}
void live_H_13(double *state, double *unused, double *out_3463561509396612115) {
  H_13(state, unused, out_3463561509396612115);
}
void live_h_14(double *state, double *unused, double *out_9115699719530867729) {
  h_14(state, unused, out_9115699719530867729);
}
void live_H_14(double *state, double *unused, double *out_184237383237638881) {
  H_14(state, unused, out_184237383237638881);
}
void live_h_33(double *state, double *unused, double *out_1564424883571661231) {
  h_33(state, unused, out_1564424883571661231);
}
void live_H_33(double *state, double *unused, double *out_954237256490621371) {
  H_33(state, unused, out_954237256490621371);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
