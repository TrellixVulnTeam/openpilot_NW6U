#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1220311343949854590) {
   out_1220311343949854590[0] = 0;
   out_1220311343949854590[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1220311343949854590[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1220311343949854590[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1220311343949854590[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1220311343949854590[5] = -sin(in_vec[1]);
   out_1220311343949854590[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1220311343949854590[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1220311343949854590[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1220311343949854590[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1220311343949854590[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1220311343949854590[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1220311343949854590[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1220311343949854590[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1220311343949854590[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1220311343949854590[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1220311343949854590[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1220311343949854590[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3153226439935894210) {
   out_3153226439935894210[0] = delta_x[0] + nom_x[0];
   out_3153226439935894210[1] = delta_x[1] + nom_x[1];
   out_3153226439935894210[2] = delta_x[2] + nom_x[2];
   out_3153226439935894210[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3153226439935894210[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3153226439935894210[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3153226439935894210[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3153226439935894210[7] = delta_x[6] + nom_x[7];
   out_3153226439935894210[8] = delta_x[7] + nom_x[8];
   out_3153226439935894210[9] = delta_x[8] + nom_x[9];
   out_3153226439935894210[10] = delta_x[9] + nom_x[10];
   out_3153226439935894210[11] = delta_x[10] + nom_x[11];
   out_3153226439935894210[12] = delta_x[11] + nom_x[12];
   out_3153226439935894210[13] = delta_x[12] + nom_x[13];
   out_3153226439935894210[14] = delta_x[13] + nom_x[14];
   out_3153226439935894210[15] = delta_x[14] + nom_x[15];
   out_3153226439935894210[16] = delta_x[15] + nom_x[16];
   out_3153226439935894210[17] = delta_x[16] + nom_x[17];
   out_3153226439935894210[18] = delta_x[17] + nom_x[18];
   out_3153226439935894210[19] = delta_x[18] + nom_x[19];
   out_3153226439935894210[20] = delta_x[19] + nom_x[20];
   out_3153226439935894210[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8463461953737375796) {
   out_8463461953737375796[0] = -nom_x[0] + true_x[0];
   out_8463461953737375796[1] = -nom_x[1] + true_x[1];
   out_8463461953737375796[2] = -nom_x[2] + true_x[2];
   out_8463461953737375796[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8463461953737375796[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8463461953737375796[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8463461953737375796[6] = -nom_x[7] + true_x[7];
   out_8463461953737375796[7] = -nom_x[8] + true_x[8];
   out_8463461953737375796[8] = -nom_x[9] + true_x[9];
   out_8463461953737375796[9] = -nom_x[10] + true_x[10];
   out_8463461953737375796[10] = -nom_x[11] + true_x[11];
   out_8463461953737375796[11] = -nom_x[12] + true_x[12];
   out_8463461953737375796[12] = -nom_x[13] + true_x[13];
   out_8463461953737375796[13] = -nom_x[14] + true_x[14];
   out_8463461953737375796[14] = -nom_x[15] + true_x[15];
   out_8463461953737375796[15] = -nom_x[16] + true_x[16];
   out_8463461953737375796[16] = -nom_x[17] + true_x[17];
   out_8463461953737375796[17] = -nom_x[18] + true_x[18];
   out_8463461953737375796[18] = -nom_x[19] + true_x[19];
   out_8463461953737375796[19] = -nom_x[20] + true_x[20];
   out_8463461953737375796[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_21562585824775244) {
   out_21562585824775244[0] = 1.0;
   out_21562585824775244[1] = 0;
   out_21562585824775244[2] = 0;
   out_21562585824775244[3] = 0;
   out_21562585824775244[4] = 0;
   out_21562585824775244[5] = 0;
   out_21562585824775244[6] = 0;
   out_21562585824775244[7] = 0;
   out_21562585824775244[8] = 0;
   out_21562585824775244[9] = 0;
   out_21562585824775244[10] = 0;
   out_21562585824775244[11] = 0;
   out_21562585824775244[12] = 0;
   out_21562585824775244[13] = 0;
   out_21562585824775244[14] = 0;
   out_21562585824775244[15] = 0;
   out_21562585824775244[16] = 0;
   out_21562585824775244[17] = 0;
   out_21562585824775244[18] = 0;
   out_21562585824775244[19] = 0;
   out_21562585824775244[20] = 0;
   out_21562585824775244[21] = 0;
   out_21562585824775244[22] = 1.0;
   out_21562585824775244[23] = 0;
   out_21562585824775244[24] = 0;
   out_21562585824775244[25] = 0;
   out_21562585824775244[26] = 0;
   out_21562585824775244[27] = 0;
   out_21562585824775244[28] = 0;
   out_21562585824775244[29] = 0;
   out_21562585824775244[30] = 0;
   out_21562585824775244[31] = 0;
   out_21562585824775244[32] = 0;
   out_21562585824775244[33] = 0;
   out_21562585824775244[34] = 0;
   out_21562585824775244[35] = 0;
   out_21562585824775244[36] = 0;
   out_21562585824775244[37] = 0;
   out_21562585824775244[38] = 0;
   out_21562585824775244[39] = 0;
   out_21562585824775244[40] = 0;
   out_21562585824775244[41] = 0;
   out_21562585824775244[42] = 0;
   out_21562585824775244[43] = 0;
   out_21562585824775244[44] = 1.0;
   out_21562585824775244[45] = 0;
   out_21562585824775244[46] = 0;
   out_21562585824775244[47] = 0;
   out_21562585824775244[48] = 0;
   out_21562585824775244[49] = 0;
   out_21562585824775244[50] = 0;
   out_21562585824775244[51] = 0;
   out_21562585824775244[52] = 0;
   out_21562585824775244[53] = 0;
   out_21562585824775244[54] = 0;
   out_21562585824775244[55] = 0;
   out_21562585824775244[56] = 0;
   out_21562585824775244[57] = 0;
   out_21562585824775244[58] = 0;
   out_21562585824775244[59] = 0;
   out_21562585824775244[60] = 0;
   out_21562585824775244[61] = 0;
   out_21562585824775244[62] = 0;
   out_21562585824775244[63] = 0;
   out_21562585824775244[64] = 0;
   out_21562585824775244[65] = 0;
   out_21562585824775244[66] = -0.5*state[4];
   out_21562585824775244[67] = -0.5*state[5];
   out_21562585824775244[68] = -0.5*state[6];
   out_21562585824775244[69] = 0;
   out_21562585824775244[70] = 0;
   out_21562585824775244[71] = 0;
   out_21562585824775244[72] = 0;
   out_21562585824775244[73] = 0;
   out_21562585824775244[74] = 0;
   out_21562585824775244[75] = 0;
   out_21562585824775244[76] = 0;
   out_21562585824775244[77] = 0;
   out_21562585824775244[78] = 0;
   out_21562585824775244[79] = 0;
   out_21562585824775244[80] = 0;
   out_21562585824775244[81] = 0;
   out_21562585824775244[82] = 0;
   out_21562585824775244[83] = 0;
   out_21562585824775244[84] = 0;
   out_21562585824775244[85] = 0;
   out_21562585824775244[86] = 0;
   out_21562585824775244[87] = 0.5*state[3];
   out_21562585824775244[88] = 0.5*state[6];
   out_21562585824775244[89] = -0.5*state[5];
   out_21562585824775244[90] = 0;
   out_21562585824775244[91] = 0;
   out_21562585824775244[92] = 0;
   out_21562585824775244[93] = 0;
   out_21562585824775244[94] = 0;
   out_21562585824775244[95] = 0;
   out_21562585824775244[96] = 0;
   out_21562585824775244[97] = 0;
   out_21562585824775244[98] = 0;
   out_21562585824775244[99] = 0;
   out_21562585824775244[100] = 0;
   out_21562585824775244[101] = 0;
   out_21562585824775244[102] = 0;
   out_21562585824775244[103] = 0;
   out_21562585824775244[104] = 0;
   out_21562585824775244[105] = 0;
   out_21562585824775244[106] = 0;
   out_21562585824775244[107] = 0;
   out_21562585824775244[108] = -0.5*state[6];
   out_21562585824775244[109] = 0.5*state[3];
   out_21562585824775244[110] = 0.5*state[4];
   out_21562585824775244[111] = 0;
   out_21562585824775244[112] = 0;
   out_21562585824775244[113] = 0;
   out_21562585824775244[114] = 0;
   out_21562585824775244[115] = 0;
   out_21562585824775244[116] = 0;
   out_21562585824775244[117] = 0;
   out_21562585824775244[118] = 0;
   out_21562585824775244[119] = 0;
   out_21562585824775244[120] = 0;
   out_21562585824775244[121] = 0;
   out_21562585824775244[122] = 0;
   out_21562585824775244[123] = 0;
   out_21562585824775244[124] = 0;
   out_21562585824775244[125] = 0;
   out_21562585824775244[126] = 0;
   out_21562585824775244[127] = 0;
   out_21562585824775244[128] = 0;
   out_21562585824775244[129] = 0.5*state[5];
   out_21562585824775244[130] = -0.5*state[4];
   out_21562585824775244[131] = 0.5*state[3];
   out_21562585824775244[132] = 0;
   out_21562585824775244[133] = 0;
   out_21562585824775244[134] = 0;
   out_21562585824775244[135] = 0;
   out_21562585824775244[136] = 0;
   out_21562585824775244[137] = 0;
   out_21562585824775244[138] = 0;
   out_21562585824775244[139] = 0;
   out_21562585824775244[140] = 0;
   out_21562585824775244[141] = 0;
   out_21562585824775244[142] = 0;
   out_21562585824775244[143] = 0;
   out_21562585824775244[144] = 0;
   out_21562585824775244[145] = 0;
   out_21562585824775244[146] = 0;
   out_21562585824775244[147] = 0;
   out_21562585824775244[148] = 0;
   out_21562585824775244[149] = 0;
   out_21562585824775244[150] = 0;
   out_21562585824775244[151] = 0;
   out_21562585824775244[152] = 0;
   out_21562585824775244[153] = 1.0;
   out_21562585824775244[154] = 0;
   out_21562585824775244[155] = 0;
   out_21562585824775244[156] = 0;
   out_21562585824775244[157] = 0;
   out_21562585824775244[158] = 0;
   out_21562585824775244[159] = 0;
   out_21562585824775244[160] = 0;
   out_21562585824775244[161] = 0;
   out_21562585824775244[162] = 0;
   out_21562585824775244[163] = 0;
   out_21562585824775244[164] = 0;
   out_21562585824775244[165] = 0;
   out_21562585824775244[166] = 0;
   out_21562585824775244[167] = 0;
   out_21562585824775244[168] = 0;
   out_21562585824775244[169] = 0;
   out_21562585824775244[170] = 0;
   out_21562585824775244[171] = 0;
   out_21562585824775244[172] = 0;
   out_21562585824775244[173] = 0;
   out_21562585824775244[174] = 0;
   out_21562585824775244[175] = 1.0;
   out_21562585824775244[176] = 0;
   out_21562585824775244[177] = 0;
   out_21562585824775244[178] = 0;
   out_21562585824775244[179] = 0;
   out_21562585824775244[180] = 0;
   out_21562585824775244[181] = 0;
   out_21562585824775244[182] = 0;
   out_21562585824775244[183] = 0;
   out_21562585824775244[184] = 0;
   out_21562585824775244[185] = 0;
   out_21562585824775244[186] = 0;
   out_21562585824775244[187] = 0;
   out_21562585824775244[188] = 0;
   out_21562585824775244[189] = 0;
   out_21562585824775244[190] = 0;
   out_21562585824775244[191] = 0;
   out_21562585824775244[192] = 0;
   out_21562585824775244[193] = 0;
   out_21562585824775244[194] = 0;
   out_21562585824775244[195] = 0;
   out_21562585824775244[196] = 0;
   out_21562585824775244[197] = 1.0;
   out_21562585824775244[198] = 0;
   out_21562585824775244[199] = 0;
   out_21562585824775244[200] = 0;
   out_21562585824775244[201] = 0;
   out_21562585824775244[202] = 0;
   out_21562585824775244[203] = 0;
   out_21562585824775244[204] = 0;
   out_21562585824775244[205] = 0;
   out_21562585824775244[206] = 0;
   out_21562585824775244[207] = 0;
   out_21562585824775244[208] = 0;
   out_21562585824775244[209] = 0;
   out_21562585824775244[210] = 0;
   out_21562585824775244[211] = 0;
   out_21562585824775244[212] = 0;
   out_21562585824775244[213] = 0;
   out_21562585824775244[214] = 0;
   out_21562585824775244[215] = 0;
   out_21562585824775244[216] = 0;
   out_21562585824775244[217] = 0;
   out_21562585824775244[218] = 0;
   out_21562585824775244[219] = 1.0;
   out_21562585824775244[220] = 0;
   out_21562585824775244[221] = 0;
   out_21562585824775244[222] = 0;
   out_21562585824775244[223] = 0;
   out_21562585824775244[224] = 0;
   out_21562585824775244[225] = 0;
   out_21562585824775244[226] = 0;
   out_21562585824775244[227] = 0;
   out_21562585824775244[228] = 0;
   out_21562585824775244[229] = 0;
   out_21562585824775244[230] = 0;
   out_21562585824775244[231] = 0;
   out_21562585824775244[232] = 0;
   out_21562585824775244[233] = 0;
   out_21562585824775244[234] = 0;
   out_21562585824775244[235] = 0;
   out_21562585824775244[236] = 0;
   out_21562585824775244[237] = 0;
   out_21562585824775244[238] = 0;
   out_21562585824775244[239] = 0;
   out_21562585824775244[240] = 0;
   out_21562585824775244[241] = 1.0;
   out_21562585824775244[242] = 0;
   out_21562585824775244[243] = 0;
   out_21562585824775244[244] = 0;
   out_21562585824775244[245] = 0;
   out_21562585824775244[246] = 0;
   out_21562585824775244[247] = 0;
   out_21562585824775244[248] = 0;
   out_21562585824775244[249] = 0;
   out_21562585824775244[250] = 0;
   out_21562585824775244[251] = 0;
   out_21562585824775244[252] = 0;
   out_21562585824775244[253] = 0;
   out_21562585824775244[254] = 0;
   out_21562585824775244[255] = 0;
   out_21562585824775244[256] = 0;
   out_21562585824775244[257] = 0;
   out_21562585824775244[258] = 0;
   out_21562585824775244[259] = 0;
   out_21562585824775244[260] = 0;
   out_21562585824775244[261] = 0;
   out_21562585824775244[262] = 0;
   out_21562585824775244[263] = 1.0;
   out_21562585824775244[264] = 0;
   out_21562585824775244[265] = 0;
   out_21562585824775244[266] = 0;
   out_21562585824775244[267] = 0;
   out_21562585824775244[268] = 0;
   out_21562585824775244[269] = 0;
   out_21562585824775244[270] = 0;
   out_21562585824775244[271] = 0;
   out_21562585824775244[272] = 0;
   out_21562585824775244[273] = 0;
   out_21562585824775244[274] = 0;
   out_21562585824775244[275] = 0;
   out_21562585824775244[276] = 0;
   out_21562585824775244[277] = 0;
   out_21562585824775244[278] = 0;
   out_21562585824775244[279] = 0;
   out_21562585824775244[280] = 0;
   out_21562585824775244[281] = 0;
   out_21562585824775244[282] = 0;
   out_21562585824775244[283] = 0;
   out_21562585824775244[284] = 0;
   out_21562585824775244[285] = 1.0;
   out_21562585824775244[286] = 0;
   out_21562585824775244[287] = 0;
   out_21562585824775244[288] = 0;
   out_21562585824775244[289] = 0;
   out_21562585824775244[290] = 0;
   out_21562585824775244[291] = 0;
   out_21562585824775244[292] = 0;
   out_21562585824775244[293] = 0;
   out_21562585824775244[294] = 0;
   out_21562585824775244[295] = 0;
   out_21562585824775244[296] = 0;
   out_21562585824775244[297] = 0;
   out_21562585824775244[298] = 0;
   out_21562585824775244[299] = 0;
   out_21562585824775244[300] = 0;
   out_21562585824775244[301] = 0;
   out_21562585824775244[302] = 0;
   out_21562585824775244[303] = 0;
   out_21562585824775244[304] = 0;
   out_21562585824775244[305] = 0;
   out_21562585824775244[306] = 0;
   out_21562585824775244[307] = 1.0;
   out_21562585824775244[308] = 0;
   out_21562585824775244[309] = 0;
   out_21562585824775244[310] = 0;
   out_21562585824775244[311] = 0;
   out_21562585824775244[312] = 0;
   out_21562585824775244[313] = 0;
   out_21562585824775244[314] = 0;
   out_21562585824775244[315] = 0;
   out_21562585824775244[316] = 0;
   out_21562585824775244[317] = 0;
   out_21562585824775244[318] = 0;
   out_21562585824775244[319] = 0;
   out_21562585824775244[320] = 0;
   out_21562585824775244[321] = 0;
   out_21562585824775244[322] = 0;
   out_21562585824775244[323] = 0;
   out_21562585824775244[324] = 0;
   out_21562585824775244[325] = 0;
   out_21562585824775244[326] = 0;
   out_21562585824775244[327] = 0;
   out_21562585824775244[328] = 0;
   out_21562585824775244[329] = 1.0;
   out_21562585824775244[330] = 0;
   out_21562585824775244[331] = 0;
   out_21562585824775244[332] = 0;
   out_21562585824775244[333] = 0;
   out_21562585824775244[334] = 0;
   out_21562585824775244[335] = 0;
   out_21562585824775244[336] = 0;
   out_21562585824775244[337] = 0;
   out_21562585824775244[338] = 0;
   out_21562585824775244[339] = 0;
   out_21562585824775244[340] = 0;
   out_21562585824775244[341] = 0;
   out_21562585824775244[342] = 0;
   out_21562585824775244[343] = 0;
   out_21562585824775244[344] = 0;
   out_21562585824775244[345] = 0;
   out_21562585824775244[346] = 0;
   out_21562585824775244[347] = 0;
   out_21562585824775244[348] = 0;
   out_21562585824775244[349] = 0;
   out_21562585824775244[350] = 0;
   out_21562585824775244[351] = 1.0;
   out_21562585824775244[352] = 0;
   out_21562585824775244[353] = 0;
   out_21562585824775244[354] = 0;
   out_21562585824775244[355] = 0;
   out_21562585824775244[356] = 0;
   out_21562585824775244[357] = 0;
   out_21562585824775244[358] = 0;
   out_21562585824775244[359] = 0;
   out_21562585824775244[360] = 0;
   out_21562585824775244[361] = 0;
   out_21562585824775244[362] = 0;
   out_21562585824775244[363] = 0;
   out_21562585824775244[364] = 0;
   out_21562585824775244[365] = 0;
   out_21562585824775244[366] = 0;
   out_21562585824775244[367] = 0;
   out_21562585824775244[368] = 0;
   out_21562585824775244[369] = 0;
   out_21562585824775244[370] = 0;
   out_21562585824775244[371] = 0;
   out_21562585824775244[372] = 0;
   out_21562585824775244[373] = 1.0;
   out_21562585824775244[374] = 0;
   out_21562585824775244[375] = 0;
   out_21562585824775244[376] = 0;
   out_21562585824775244[377] = 0;
   out_21562585824775244[378] = 0;
   out_21562585824775244[379] = 0;
   out_21562585824775244[380] = 0;
   out_21562585824775244[381] = 0;
   out_21562585824775244[382] = 0;
   out_21562585824775244[383] = 0;
   out_21562585824775244[384] = 0;
   out_21562585824775244[385] = 0;
   out_21562585824775244[386] = 0;
   out_21562585824775244[387] = 0;
   out_21562585824775244[388] = 0;
   out_21562585824775244[389] = 0;
   out_21562585824775244[390] = 0;
   out_21562585824775244[391] = 0;
   out_21562585824775244[392] = 0;
   out_21562585824775244[393] = 0;
   out_21562585824775244[394] = 0;
   out_21562585824775244[395] = 1.0;
   out_21562585824775244[396] = 0;
   out_21562585824775244[397] = 0;
   out_21562585824775244[398] = 0;
   out_21562585824775244[399] = 0;
   out_21562585824775244[400] = 0;
   out_21562585824775244[401] = 0;
   out_21562585824775244[402] = 0;
   out_21562585824775244[403] = 0;
   out_21562585824775244[404] = 0;
   out_21562585824775244[405] = 0;
   out_21562585824775244[406] = 0;
   out_21562585824775244[407] = 0;
   out_21562585824775244[408] = 0;
   out_21562585824775244[409] = 0;
   out_21562585824775244[410] = 0;
   out_21562585824775244[411] = 0;
   out_21562585824775244[412] = 0;
   out_21562585824775244[413] = 0;
   out_21562585824775244[414] = 0;
   out_21562585824775244[415] = 0;
   out_21562585824775244[416] = 0;
   out_21562585824775244[417] = 1.0;
   out_21562585824775244[418] = 0;
   out_21562585824775244[419] = 0;
   out_21562585824775244[420] = 0;
   out_21562585824775244[421] = 0;
   out_21562585824775244[422] = 0;
   out_21562585824775244[423] = 0;
   out_21562585824775244[424] = 0;
   out_21562585824775244[425] = 0;
   out_21562585824775244[426] = 0;
   out_21562585824775244[427] = 0;
   out_21562585824775244[428] = 0;
   out_21562585824775244[429] = 0;
   out_21562585824775244[430] = 0;
   out_21562585824775244[431] = 0;
   out_21562585824775244[432] = 0;
   out_21562585824775244[433] = 0;
   out_21562585824775244[434] = 0;
   out_21562585824775244[435] = 0;
   out_21562585824775244[436] = 0;
   out_21562585824775244[437] = 0;
   out_21562585824775244[438] = 0;
   out_21562585824775244[439] = 1.0;
   out_21562585824775244[440] = 0;
   out_21562585824775244[441] = 0;
   out_21562585824775244[442] = 0;
   out_21562585824775244[443] = 0;
   out_21562585824775244[444] = 0;
   out_21562585824775244[445] = 0;
   out_21562585824775244[446] = 0;
   out_21562585824775244[447] = 0;
   out_21562585824775244[448] = 0;
   out_21562585824775244[449] = 0;
   out_21562585824775244[450] = 0;
   out_21562585824775244[451] = 0;
   out_21562585824775244[452] = 0;
   out_21562585824775244[453] = 0;
   out_21562585824775244[454] = 0;
   out_21562585824775244[455] = 0;
   out_21562585824775244[456] = 0;
   out_21562585824775244[457] = 0;
   out_21562585824775244[458] = 0;
   out_21562585824775244[459] = 0;
   out_21562585824775244[460] = 0;
   out_21562585824775244[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8333998904903447252) {
   out_8333998904903447252[0] = dt*state[7] + state[0];
   out_8333998904903447252[1] = dt*state[8] + state[1];
   out_8333998904903447252[2] = dt*state[9] + state[2];
   out_8333998904903447252[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8333998904903447252[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8333998904903447252[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8333998904903447252[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8333998904903447252[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8333998904903447252[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8333998904903447252[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8333998904903447252[10] = state[10];
   out_8333998904903447252[11] = state[11];
   out_8333998904903447252[12] = state[12];
   out_8333998904903447252[13] = state[13];
   out_8333998904903447252[14] = state[14];
   out_8333998904903447252[15] = state[15];
   out_8333998904903447252[16] = state[16];
   out_8333998904903447252[17] = state[17];
   out_8333998904903447252[18] = state[18];
   out_8333998904903447252[19] = state[19];
   out_8333998904903447252[20] = state[20];
   out_8333998904903447252[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7893806645490710208) {
   out_7893806645490710208[0] = 1;
   out_7893806645490710208[1] = 0;
   out_7893806645490710208[2] = 0;
   out_7893806645490710208[3] = 0;
   out_7893806645490710208[4] = 0;
   out_7893806645490710208[5] = 0;
   out_7893806645490710208[6] = dt;
   out_7893806645490710208[7] = 0;
   out_7893806645490710208[8] = 0;
   out_7893806645490710208[9] = 0;
   out_7893806645490710208[10] = 0;
   out_7893806645490710208[11] = 0;
   out_7893806645490710208[12] = 0;
   out_7893806645490710208[13] = 0;
   out_7893806645490710208[14] = 0;
   out_7893806645490710208[15] = 0;
   out_7893806645490710208[16] = 0;
   out_7893806645490710208[17] = 0;
   out_7893806645490710208[18] = 0;
   out_7893806645490710208[19] = 0;
   out_7893806645490710208[20] = 0;
   out_7893806645490710208[21] = 0;
   out_7893806645490710208[22] = 1;
   out_7893806645490710208[23] = 0;
   out_7893806645490710208[24] = 0;
   out_7893806645490710208[25] = 0;
   out_7893806645490710208[26] = 0;
   out_7893806645490710208[27] = 0;
   out_7893806645490710208[28] = dt;
   out_7893806645490710208[29] = 0;
   out_7893806645490710208[30] = 0;
   out_7893806645490710208[31] = 0;
   out_7893806645490710208[32] = 0;
   out_7893806645490710208[33] = 0;
   out_7893806645490710208[34] = 0;
   out_7893806645490710208[35] = 0;
   out_7893806645490710208[36] = 0;
   out_7893806645490710208[37] = 0;
   out_7893806645490710208[38] = 0;
   out_7893806645490710208[39] = 0;
   out_7893806645490710208[40] = 0;
   out_7893806645490710208[41] = 0;
   out_7893806645490710208[42] = 0;
   out_7893806645490710208[43] = 0;
   out_7893806645490710208[44] = 1;
   out_7893806645490710208[45] = 0;
   out_7893806645490710208[46] = 0;
   out_7893806645490710208[47] = 0;
   out_7893806645490710208[48] = 0;
   out_7893806645490710208[49] = 0;
   out_7893806645490710208[50] = dt;
   out_7893806645490710208[51] = 0;
   out_7893806645490710208[52] = 0;
   out_7893806645490710208[53] = 0;
   out_7893806645490710208[54] = 0;
   out_7893806645490710208[55] = 0;
   out_7893806645490710208[56] = 0;
   out_7893806645490710208[57] = 0;
   out_7893806645490710208[58] = 0;
   out_7893806645490710208[59] = 0;
   out_7893806645490710208[60] = 0;
   out_7893806645490710208[61] = 0;
   out_7893806645490710208[62] = 0;
   out_7893806645490710208[63] = 0;
   out_7893806645490710208[64] = 0;
   out_7893806645490710208[65] = 0;
   out_7893806645490710208[66] = 1;
   out_7893806645490710208[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7893806645490710208[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7893806645490710208[69] = 0;
   out_7893806645490710208[70] = 0;
   out_7893806645490710208[71] = 0;
   out_7893806645490710208[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7893806645490710208[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7893806645490710208[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7893806645490710208[75] = 0;
   out_7893806645490710208[76] = 0;
   out_7893806645490710208[77] = 0;
   out_7893806645490710208[78] = 0;
   out_7893806645490710208[79] = 0;
   out_7893806645490710208[80] = 0;
   out_7893806645490710208[81] = 0;
   out_7893806645490710208[82] = 0;
   out_7893806645490710208[83] = 0;
   out_7893806645490710208[84] = 0;
   out_7893806645490710208[85] = 0;
   out_7893806645490710208[86] = 0;
   out_7893806645490710208[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7893806645490710208[88] = 1;
   out_7893806645490710208[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7893806645490710208[90] = 0;
   out_7893806645490710208[91] = 0;
   out_7893806645490710208[92] = 0;
   out_7893806645490710208[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7893806645490710208[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7893806645490710208[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7893806645490710208[96] = 0;
   out_7893806645490710208[97] = 0;
   out_7893806645490710208[98] = 0;
   out_7893806645490710208[99] = 0;
   out_7893806645490710208[100] = 0;
   out_7893806645490710208[101] = 0;
   out_7893806645490710208[102] = 0;
   out_7893806645490710208[103] = 0;
   out_7893806645490710208[104] = 0;
   out_7893806645490710208[105] = 0;
   out_7893806645490710208[106] = 0;
   out_7893806645490710208[107] = 0;
   out_7893806645490710208[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7893806645490710208[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7893806645490710208[110] = 1;
   out_7893806645490710208[111] = 0;
   out_7893806645490710208[112] = 0;
   out_7893806645490710208[113] = 0;
   out_7893806645490710208[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7893806645490710208[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7893806645490710208[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7893806645490710208[117] = 0;
   out_7893806645490710208[118] = 0;
   out_7893806645490710208[119] = 0;
   out_7893806645490710208[120] = 0;
   out_7893806645490710208[121] = 0;
   out_7893806645490710208[122] = 0;
   out_7893806645490710208[123] = 0;
   out_7893806645490710208[124] = 0;
   out_7893806645490710208[125] = 0;
   out_7893806645490710208[126] = 0;
   out_7893806645490710208[127] = 0;
   out_7893806645490710208[128] = 0;
   out_7893806645490710208[129] = 0;
   out_7893806645490710208[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7893806645490710208[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7893806645490710208[132] = 1;
   out_7893806645490710208[133] = 0;
   out_7893806645490710208[134] = 0;
   out_7893806645490710208[135] = 0;
   out_7893806645490710208[136] = 0;
   out_7893806645490710208[137] = 0;
   out_7893806645490710208[138] = 0;
   out_7893806645490710208[139] = 0;
   out_7893806645490710208[140] = 0;
   out_7893806645490710208[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7893806645490710208[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7893806645490710208[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7893806645490710208[144] = 0;
   out_7893806645490710208[145] = 0;
   out_7893806645490710208[146] = 0;
   out_7893806645490710208[147] = 0;
   out_7893806645490710208[148] = 0;
   out_7893806645490710208[149] = 0;
   out_7893806645490710208[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7893806645490710208[151] = 0;
   out_7893806645490710208[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7893806645490710208[153] = 0;
   out_7893806645490710208[154] = 1;
   out_7893806645490710208[155] = 0;
   out_7893806645490710208[156] = 0;
   out_7893806645490710208[157] = 0;
   out_7893806645490710208[158] = 0;
   out_7893806645490710208[159] = 0;
   out_7893806645490710208[160] = 0;
   out_7893806645490710208[161] = 0;
   out_7893806645490710208[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7893806645490710208[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7893806645490710208[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7893806645490710208[165] = 0;
   out_7893806645490710208[166] = 0;
   out_7893806645490710208[167] = 0;
   out_7893806645490710208[168] = 0;
   out_7893806645490710208[169] = 0;
   out_7893806645490710208[170] = 0;
   out_7893806645490710208[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7893806645490710208[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7893806645490710208[173] = 0;
   out_7893806645490710208[174] = 0;
   out_7893806645490710208[175] = 0;
   out_7893806645490710208[176] = 1;
   out_7893806645490710208[177] = 0;
   out_7893806645490710208[178] = 0;
   out_7893806645490710208[179] = 0;
   out_7893806645490710208[180] = 0;
   out_7893806645490710208[181] = 0;
   out_7893806645490710208[182] = 0;
   out_7893806645490710208[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7893806645490710208[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7893806645490710208[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7893806645490710208[186] = 0;
   out_7893806645490710208[187] = 0;
   out_7893806645490710208[188] = 0;
   out_7893806645490710208[189] = 0;
   out_7893806645490710208[190] = 0;
   out_7893806645490710208[191] = 0;
   out_7893806645490710208[192] = 0;
   out_7893806645490710208[193] = 0;
   out_7893806645490710208[194] = 0;
   out_7893806645490710208[195] = 0;
   out_7893806645490710208[196] = 0;
   out_7893806645490710208[197] = 0;
   out_7893806645490710208[198] = 1;
   out_7893806645490710208[199] = 0;
   out_7893806645490710208[200] = 0;
   out_7893806645490710208[201] = 0;
   out_7893806645490710208[202] = 0;
   out_7893806645490710208[203] = 0;
   out_7893806645490710208[204] = 0;
   out_7893806645490710208[205] = 0;
   out_7893806645490710208[206] = 0;
   out_7893806645490710208[207] = 0;
   out_7893806645490710208[208] = 0;
   out_7893806645490710208[209] = 0;
   out_7893806645490710208[210] = 0;
   out_7893806645490710208[211] = 0;
   out_7893806645490710208[212] = 0;
   out_7893806645490710208[213] = 0;
   out_7893806645490710208[214] = 0;
   out_7893806645490710208[215] = 0;
   out_7893806645490710208[216] = 0;
   out_7893806645490710208[217] = 0;
   out_7893806645490710208[218] = 0;
   out_7893806645490710208[219] = 0;
   out_7893806645490710208[220] = 1;
   out_7893806645490710208[221] = 0;
   out_7893806645490710208[222] = 0;
   out_7893806645490710208[223] = 0;
   out_7893806645490710208[224] = 0;
   out_7893806645490710208[225] = 0;
   out_7893806645490710208[226] = 0;
   out_7893806645490710208[227] = 0;
   out_7893806645490710208[228] = 0;
   out_7893806645490710208[229] = 0;
   out_7893806645490710208[230] = 0;
   out_7893806645490710208[231] = 0;
   out_7893806645490710208[232] = 0;
   out_7893806645490710208[233] = 0;
   out_7893806645490710208[234] = 0;
   out_7893806645490710208[235] = 0;
   out_7893806645490710208[236] = 0;
   out_7893806645490710208[237] = 0;
   out_7893806645490710208[238] = 0;
   out_7893806645490710208[239] = 0;
   out_7893806645490710208[240] = 0;
   out_7893806645490710208[241] = 0;
   out_7893806645490710208[242] = 1;
   out_7893806645490710208[243] = 0;
   out_7893806645490710208[244] = 0;
   out_7893806645490710208[245] = 0;
   out_7893806645490710208[246] = 0;
   out_7893806645490710208[247] = 0;
   out_7893806645490710208[248] = 0;
   out_7893806645490710208[249] = 0;
   out_7893806645490710208[250] = 0;
   out_7893806645490710208[251] = 0;
   out_7893806645490710208[252] = 0;
   out_7893806645490710208[253] = 0;
   out_7893806645490710208[254] = 0;
   out_7893806645490710208[255] = 0;
   out_7893806645490710208[256] = 0;
   out_7893806645490710208[257] = 0;
   out_7893806645490710208[258] = 0;
   out_7893806645490710208[259] = 0;
   out_7893806645490710208[260] = 0;
   out_7893806645490710208[261] = 0;
   out_7893806645490710208[262] = 0;
   out_7893806645490710208[263] = 0;
   out_7893806645490710208[264] = 1;
   out_7893806645490710208[265] = 0;
   out_7893806645490710208[266] = 0;
   out_7893806645490710208[267] = 0;
   out_7893806645490710208[268] = 0;
   out_7893806645490710208[269] = 0;
   out_7893806645490710208[270] = 0;
   out_7893806645490710208[271] = 0;
   out_7893806645490710208[272] = 0;
   out_7893806645490710208[273] = 0;
   out_7893806645490710208[274] = 0;
   out_7893806645490710208[275] = 0;
   out_7893806645490710208[276] = 0;
   out_7893806645490710208[277] = 0;
   out_7893806645490710208[278] = 0;
   out_7893806645490710208[279] = 0;
   out_7893806645490710208[280] = 0;
   out_7893806645490710208[281] = 0;
   out_7893806645490710208[282] = 0;
   out_7893806645490710208[283] = 0;
   out_7893806645490710208[284] = 0;
   out_7893806645490710208[285] = 0;
   out_7893806645490710208[286] = 1;
   out_7893806645490710208[287] = 0;
   out_7893806645490710208[288] = 0;
   out_7893806645490710208[289] = 0;
   out_7893806645490710208[290] = 0;
   out_7893806645490710208[291] = 0;
   out_7893806645490710208[292] = 0;
   out_7893806645490710208[293] = 0;
   out_7893806645490710208[294] = 0;
   out_7893806645490710208[295] = 0;
   out_7893806645490710208[296] = 0;
   out_7893806645490710208[297] = 0;
   out_7893806645490710208[298] = 0;
   out_7893806645490710208[299] = 0;
   out_7893806645490710208[300] = 0;
   out_7893806645490710208[301] = 0;
   out_7893806645490710208[302] = 0;
   out_7893806645490710208[303] = 0;
   out_7893806645490710208[304] = 0;
   out_7893806645490710208[305] = 0;
   out_7893806645490710208[306] = 0;
   out_7893806645490710208[307] = 0;
   out_7893806645490710208[308] = 1;
   out_7893806645490710208[309] = 0;
   out_7893806645490710208[310] = 0;
   out_7893806645490710208[311] = 0;
   out_7893806645490710208[312] = 0;
   out_7893806645490710208[313] = 0;
   out_7893806645490710208[314] = 0;
   out_7893806645490710208[315] = 0;
   out_7893806645490710208[316] = 0;
   out_7893806645490710208[317] = 0;
   out_7893806645490710208[318] = 0;
   out_7893806645490710208[319] = 0;
   out_7893806645490710208[320] = 0;
   out_7893806645490710208[321] = 0;
   out_7893806645490710208[322] = 0;
   out_7893806645490710208[323] = 0;
   out_7893806645490710208[324] = 0;
   out_7893806645490710208[325] = 0;
   out_7893806645490710208[326] = 0;
   out_7893806645490710208[327] = 0;
   out_7893806645490710208[328] = 0;
   out_7893806645490710208[329] = 0;
   out_7893806645490710208[330] = 1;
   out_7893806645490710208[331] = 0;
   out_7893806645490710208[332] = 0;
   out_7893806645490710208[333] = 0;
   out_7893806645490710208[334] = 0;
   out_7893806645490710208[335] = 0;
   out_7893806645490710208[336] = 0;
   out_7893806645490710208[337] = 0;
   out_7893806645490710208[338] = 0;
   out_7893806645490710208[339] = 0;
   out_7893806645490710208[340] = 0;
   out_7893806645490710208[341] = 0;
   out_7893806645490710208[342] = 0;
   out_7893806645490710208[343] = 0;
   out_7893806645490710208[344] = 0;
   out_7893806645490710208[345] = 0;
   out_7893806645490710208[346] = 0;
   out_7893806645490710208[347] = 0;
   out_7893806645490710208[348] = 0;
   out_7893806645490710208[349] = 0;
   out_7893806645490710208[350] = 0;
   out_7893806645490710208[351] = 0;
   out_7893806645490710208[352] = 1;
   out_7893806645490710208[353] = 0;
   out_7893806645490710208[354] = 0;
   out_7893806645490710208[355] = 0;
   out_7893806645490710208[356] = 0;
   out_7893806645490710208[357] = 0;
   out_7893806645490710208[358] = 0;
   out_7893806645490710208[359] = 0;
   out_7893806645490710208[360] = 0;
   out_7893806645490710208[361] = 0;
   out_7893806645490710208[362] = 0;
   out_7893806645490710208[363] = 0;
   out_7893806645490710208[364] = 0;
   out_7893806645490710208[365] = 0;
   out_7893806645490710208[366] = 0;
   out_7893806645490710208[367] = 0;
   out_7893806645490710208[368] = 0;
   out_7893806645490710208[369] = 0;
   out_7893806645490710208[370] = 0;
   out_7893806645490710208[371] = 0;
   out_7893806645490710208[372] = 0;
   out_7893806645490710208[373] = 0;
   out_7893806645490710208[374] = 1;
   out_7893806645490710208[375] = 0;
   out_7893806645490710208[376] = 0;
   out_7893806645490710208[377] = 0;
   out_7893806645490710208[378] = 0;
   out_7893806645490710208[379] = 0;
   out_7893806645490710208[380] = 0;
   out_7893806645490710208[381] = 0;
   out_7893806645490710208[382] = 0;
   out_7893806645490710208[383] = 0;
   out_7893806645490710208[384] = 0;
   out_7893806645490710208[385] = 0;
   out_7893806645490710208[386] = 0;
   out_7893806645490710208[387] = 0;
   out_7893806645490710208[388] = 0;
   out_7893806645490710208[389] = 0;
   out_7893806645490710208[390] = 0;
   out_7893806645490710208[391] = 0;
   out_7893806645490710208[392] = 0;
   out_7893806645490710208[393] = 0;
   out_7893806645490710208[394] = 0;
   out_7893806645490710208[395] = 0;
   out_7893806645490710208[396] = 1;
   out_7893806645490710208[397] = 0;
   out_7893806645490710208[398] = 0;
   out_7893806645490710208[399] = 0;
   out_7893806645490710208[400] = 0;
   out_7893806645490710208[401] = 0;
   out_7893806645490710208[402] = 0;
   out_7893806645490710208[403] = 0;
   out_7893806645490710208[404] = 0;
   out_7893806645490710208[405] = 0;
   out_7893806645490710208[406] = 0;
   out_7893806645490710208[407] = 0;
   out_7893806645490710208[408] = 0;
   out_7893806645490710208[409] = 0;
   out_7893806645490710208[410] = 0;
   out_7893806645490710208[411] = 0;
   out_7893806645490710208[412] = 0;
   out_7893806645490710208[413] = 0;
   out_7893806645490710208[414] = 0;
   out_7893806645490710208[415] = 0;
   out_7893806645490710208[416] = 0;
   out_7893806645490710208[417] = 0;
   out_7893806645490710208[418] = 1;
   out_7893806645490710208[419] = 0;
   out_7893806645490710208[420] = 0;
   out_7893806645490710208[421] = 0;
   out_7893806645490710208[422] = 0;
   out_7893806645490710208[423] = 0;
   out_7893806645490710208[424] = 0;
   out_7893806645490710208[425] = 0;
   out_7893806645490710208[426] = 0;
   out_7893806645490710208[427] = 0;
   out_7893806645490710208[428] = 0;
   out_7893806645490710208[429] = 0;
   out_7893806645490710208[430] = 0;
   out_7893806645490710208[431] = 0;
   out_7893806645490710208[432] = 0;
   out_7893806645490710208[433] = 0;
   out_7893806645490710208[434] = 0;
   out_7893806645490710208[435] = 0;
   out_7893806645490710208[436] = 0;
   out_7893806645490710208[437] = 0;
   out_7893806645490710208[438] = 0;
   out_7893806645490710208[439] = 0;
   out_7893806645490710208[440] = 1;
}
void h_4(double *state, double *unused, double *out_7403799576841385348) {
   out_7403799576841385348[0] = state[10] + state[13];
   out_7403799576841385348[1] = state[11] + state[14];
   out_7403799576841385348[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3340629146868555404) {
   out_3340629146868555404[0] = 0;
   out_3340629146868555404[1] = 0;
   out_3340629146868555404[2] = 0;
   out_3340629146868555404[3] = 0;
   out_3340629146868555404[4] = 0;
   out_3340629146868555404[5] = 0;
   out_3340629146868555404[6] = 0;
   out_3340629146868555404[7] = 0;
   out_3340629146868555404[8] = 0;
   out_3340629146868555404[9] = 0;
   out_3340629146868555404[10] = 1;
   out_3340629146868555404[11] = 0;
   out_3340629146868555404[12] = 0;
   out_3340629146868555404[13] = 1;
   out_3340629146868555404[14] = 0;
   out_3340629146868555404[15] = 0;
   out_3340629146868555404[16] = 0;
   out_3340629146868555404[17] = 0;
   out_3340629146868555404[18] = 0;
   out_3340629146868555404[19] = 0;
   out_3340629146868555404[20] = 0;
   out_3340629146868555404[21] = 0;
   out_3340629146868555404[22] = 0;
   out_3340629146868555404[23] = 0;
   out_3340629146868555404[24] = 0;
   out_3340629146868555404[25] = 0;
   out_3340629146868555404[26] = 0;
   out_3340629146868555404[27] = 0;
   out_3340629146868555404[28] = 0;
   out_3340629146868555404[29] = 0;
   out_3340629146868555404[30] = 0;
   out_3340629146868555404[31] = 0;
   out_3340629146868555404[32] = 0;
   out_3340629146868555404[33] = 1;
   out_3340629146868555404[34] = 0;
   out_3340629146868555404[35] = 0;
   out_3340629146868555404[36] = 1;
   out_3340629146868555404[37] = 0;
   out_3340629146868555404[38] = 0;
   out_3340629146868555404[39] = 0;
   out_3340629146868555404[40] = 0;
   out_3340629146868555404[41] = 0;
   out_3340629146868555404[42] = 0;
   out_3340629146868555404[43] = 0;
   out_3340629146868555404[44] = 0;
   out_3340629146868555404[45] = 0;
   out_3340629146868555404[46] = 0;
   out_3340629146868555404[47] = 0;
   out_3340629146868555404[48] = 0;
   out_3340629146868555404[49] = 0;
   out_3340629146868555404[50] = 0;
   out_3340629146868555404[51] = 0;
   out_3340629146868555404[52] = 0;
   out_3340629146868555404[53] = 0;
   out_3340629146868555404[54] = 0;
   out_3340629146868555404[55] = 0;
   out_3340629146868555404[56] = 1;
   out_3340629146868555404[57] = 0;
   out_3340629146868555404[58] = 0;
   out_3340629146868555404[59] = 1;
   out_3340629146868555404[60] = 0;
   out_3340629146868555404[61] = 0;
   out_3340629146868555404[62] = 0;
   out_3340629146868555404[63] = 0;
   out_3340629146868555404[64] = 0;
   out_3340629146868555404[65] = 0;
}
void h_9(double *state, double *unused, double *out_3237950739396852411) {
   out_3237950739396852411[0] = state[10];
   out_3237950739396852411[1] = state[11];
   out_3237950739396852411[2] = state[12];
}
void H_9(double *state, double *unused, double *out_451767594588476062) {
   out_451767594588476062[0] = 0;
   out_451767594588476062[1] = 0;
   out_451767594588476062[2] = 0;
   out_451767594588476062[3] = 0;
   out_451767594588476062[4] = 0;
   out_451767594588476062[5] = 0;
   out_451767594588476062[6] = 0;
   out_451767594588476062[7] = 0;
   out_451767594588476062[8] = 0;
   out_451767594588476062[9] = 0;
   out_451767594588476062[10] = 1;
   out_451767594588476062[11] = 0;
   out_451767594588476062[12] = 0;
   out_451767594588476062[13] = 0;
   out_451767594588476062[14] = 0;
   out_451767594588476062[15] = 0;
   out_451767594588476062[16] = 0;
   out_451767594588476062[17] = 0;
   out_451767594588476062[18] = 0;
   out_451767594588476062[19] = 0;
   out_451767594588476062[20] = 0;
   out_451767594588476062[21] = 0;
   out_451767594588476062[22] = 0;
   out_451767594588476062[23] = 0;
   out_451767594588476062[24] = 0;
   out_451767594588476062[25] = 0;
   out_451767594588476062[26] = 0;
   out_451767594588476062[27] = 0;
   out_451767594588476062[28] = 0;
   out_451767594588476062[29] = 0;
   out_451767594588476062[30] = 0;
   out_451767594588476062[31] = 0;
   out_451767594588476062[32] = 0;
   out_451767594588476062[33] = 1;
   out_451767594588476062[34] = 0;
   out_451767594588476062[35] = 0;
   out_451767594588476062[36] = 0;
   out_451767594588476062[37] = 0;
   out_451767594588476062[38] = 0;
   out_451767594588476062[39] = 0;
   out_451767594588476062[40] = 0;
   out_451767594588476062[41] = 0;
   out_451767594588476062[42] = 0;
   out_451767594588476062[43] = 0;
   out_451767594588476062[44] = 0;
   out_451767594588476062[45] = 0;
   out_451767594588476062[46] = 0;
   out_451767594588476062[47] = 0;
   out_451767594588476062[48] = 0;
   out_451767594588476062[49] = 0;
   out_451767594588476062[50] = 0;
   out_451767594588476062[51] = 0;
   out_451767594588476062[52] = 0;
   out_451767594588476062[53] = 0;
   out_451767594588476062[54] = 0;
   out_451767594588476062[55] = 0;
   out_451767594588476062[56] = 1;
   out_451767594588476062[57] = 0;
   out_451767594588476062[58] = 0;
   out_451767594588476062[59] = 0;
   out_451767594588476062[60] = 0;
   out_451767594588476062[61] = 0;
   out_451767594588476062[62] = 0;
   out_451767594588476062[63] = 0;
   out_451767594588476062[64] = 0;
   out_451767594588476062[65] = 0;
}
void h_10(double *state, double *unused, double *out_5171938564839258654) {
   out_5171938564839258654[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5171938564839258654[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5171938564839258654[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_56454275011937580) {
   out_56454275011937580[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_56454275011937580[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_56454275011937580[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_56454275011937580[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_56454275011937580[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_56454275011937580[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_56454275011937580[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_56454275011937580[7] = 0;
   out_56454275011937580[8] = 0;
   out_56454275011937580[9] = 0;
   out_56454275011937580[10] = 0;
   out_56454275011937580[11] = 0;
   out_56454275011937580[12] = 0;
   out_56454275011937580[13] = 0;
   out_56454275011937580[14] = 0;
   out_56454275011937580[15] = 0;
   out_56454275011937580[16] = 1;
   out_56454275011937580[17] = 0;
   out_56454275011937580[18] = 0;
   out_56454275011937580[19] = 1;
   out_56454275011937580[20] = 0;
   out_56454275011937580[21] = 0;
   out_56454275011937580[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_56454275011937580[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_56454275011937580[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_56454275011937580[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_56454275011937580[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_56454275011937580[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_56454275011937580[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_56454275011937580[29] = 0;
   out_56454275011937580[30] = 0;
   out_56454275011937580[31] = 0;
   out_56454275011937580[32] = 0;
   out_56454275011937580[33] = 0;
   out_56454275011937580[34] = 0;
   out_56454275011937580[35] = 0;
   out_56454275011937580[36] = 0;
   out_56454275011937580[37] = 0;
   out_56454275011937580[38] = 0;
   out_56454275011937580[39] = 1;
   out_56454275011937580[40] = 0;
   out_56454275011937580[41] = 0;
   out_56454275011937580[42] = 1;
   out_56454275011937580[43] = 0;
   out_56454275011937580[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_56454275011937580[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_56454275011937580[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_56454275011937580[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_56454275011937580[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_56454275011937580[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_56454275011937580[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_56454275011937580[51] = 0;
   out_56454275011937580[52] = 0;
   out_56454275011937580[53] = 0;
   out_56454275011937580[54] = 0;
   out_56454275011937580[55] = 0;
   out_56454275011937580[56] = 0;
   out_56454275011937580[57] = 0;
   out_56454275011937580[58] = 0;
   out_56454275011937580[59] = 0;
   out_56454275011937580[60] = 0;
   out_56454275011937580[61] = 0;
   out_56454275011937580[62] = 1;
   out_56454275011937580[63] = 0;
   out_56454275011937580[64] = 0;
   out_56454275011937580[65] = 1;
}
void h_12(double *state, double *unused, double *out_4968959824595442666) {
   out_4968959824595442666[0] = state[0];
   out_4968959824595442666[1] = state[1];
   out_4968959824595442666[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2719530121820961737) {
   out_2719530121820961737[0] = 1;
   out_2719530121820961737[1] = 0;
   out_2719530121820961737[2] = 0;
   out_2719530121820961737[3] = 0;
   out_2719530121820961737[4] = 0;
   out_2719530121820961737[5] = 0;
   out_2719530121820961737[6] = 0;
   out_2719530121820961737[7] = 0;
   out_2719530121820961737[8] = 0;
   out_2719530121820961737[9] = 0;
   out_2719530121820961737[10] = 0;
   out_2719530121820961737[11] = 0;
   out_2719530121820961737[12] = 0;
   out_2719530121820961737[13] = 0;
   out_2719530121820961737[14] = 0;
   out_2719530121820961737[15] = 0;
   out_2719530121820961737[16] = 0;
   out_2719530121820961737[17] = 0;
   out_2719530121820961737[18] = 0;
   out_2719530121820961737[19] = 0;
   out_2719530121820961737[20] = 0;
   out_2719530121820961737[21] = 0;
   out_2719530121820961737[22] = 0;
   out_2719530121820961737[23] = 1;
   out_2719530121820961737[24] = 0;
   out_2719530121820961737[25] = 0;
   out_2719530121820961737[26] = 0;
   out_2719530121820961737[27] = 0;
   out_2719530121820961737[28] = 0;
   out_2719530121820961737[29] = 0;
   out_2719530121820961737[30] = 0;
   out_2719530121820961737[31] = 0;
   out_2719530121820961737[32] = 0;
   out_2719530121820961737[33] = 0;
   out_2719530121820961737[34] = 0;
   out_2719530121820961737[35] = 0;
   out_2719530121820961737[36] = 0;
   out_2719530121820961737[37] = 0;
   out_2719530121820961737[38] = 0;
   out_2719530121820961737[39] = 0;
   out_2719530121820961737[40] = 0;
   out_2719530121820961737[41] = 0;
   out_2719530121820961737[42] = 0;
   out_2719530121820961737[43] = 0;
   out_2719530121820961737[44] = 0;
   out_2719530121820961737[45] = 0;
   out_2719530121820961737[46] = 1;
   out_2719530121820961737[47] = 0;
   out_2719530121820961737[48] = 0;
   out_2719530121820961737[49] = 0;
   out_2719530121820961737[50] = 0;
   out_2719530121820961737[51] = 0;
   out_2719530121820961737[52] = 0;
   out_2719530121820961737[53] = 0;
   out_2719530121820961737[54] = 0;
   out_2719530121820961737[55] = 0;
   out_2719530121820961737[56] = 0;
   out_2719530121820961737[57] = 0;
   out_2719530121820961737[58] = 0;
   out_2719530121820961737[59] = 0;
   out_2719530121820961737[60] = 0;
   out_2719530121820961737[61] = 0;
   out_2719530121820961737[62] = 0;
   out_2719530121820961737[63] = 0;
   out_2719530121820961737[64] = 0;
   out_2719530121820961737[65] = 0;
}
void h_31(double *state, double *unused, double *out_4693443347889562258) {
   out_4693443347889562258[0] = state[7];
   out_4693443347889562258[1] = state[8];
   out_4693443347889562258[2] = state[9];
}
void H_31(double *state, double *unused, double *out_26032910504051972) {
   out_26032910504051972[0] = 0;
   out_26032910504051972[1] = 0;
   out_26032910504051972[2] = 0;
   out_26032910504051972[3] = 0;
   out_26032910504051972[4] = 0;
   out_26032910504051972[5] = 0;
   out_26032910504051972[6] = 0;
   out_26032910504051972[7] = 1;
   out_26032910504051972[8] = 0;
   out_26032910504051972[9] = 0;
   out_26032910504051972[10] = 0;
   out_26032910504051972[11] = 0;
   out_26032910504051972[12] = 0;
   out_26032910504051972[13] = 0;
   out_26032910504051972[14] = 0;
   out_26032910504051972[15] = 0;
   out_26032910504051972[16] = 0;
   out_26032910504051972[17] = 0;
   out_26032910504051972[18] = 0;
   out_26032910504051972[19] = 0;
   out_26032910504051972[20] = 0;
   out_26032910504051972[21] = 0;
   out_26032910504051972[22] = 0;
   out_26032910504051972[23] = 0;
   out_26032910504051972[24] = 0;
   out_26032910504051972[25] = 0;
   out_26032910504051972[26] = 0;
   out_26032910504051972[27] = 0;
   out_26032910504051972[28] = 0;
   out_26032910504051972[29] = 0;
   out_26032910504051972[30] = 1;
   out_26032910504051972[31] = 0;
   out_26032910504051972[32] = 0;
   out_26032910504051972[33] = 0;
   out_26032910504051972[34] = 0;
   out_26032910504051972[35] = 0;
   out_26032910504051972[36] = 0;
   out_26032910504051972[37] = 0;
   out_26032910504051972[38] = 0;
   out_26032910504051972[39] = 0;
   out_26032910504051972[40] = 0;
   out_26032910504051972[41] = 0;
   out_26032910504051972[42] = 0;
   out_26032910504051972[43] = 0;
   out_26032910504051972[44] = 0;
   out_26032910504051972[45] = 0;
   out_26032910504051972[46] = 0;
   out_26032910504051972[47] = 0;
   out_26032910504051972[48] = 0;
   out_26032910504051972[49] = 0;
   out_26032910504051972[50] = 0;
   out_26032910504051972[51] = 0;
   out_26032910504051972[52] = 0;
   out_26032910504051972[53] = 1;
   out_26032910504051972[54] = 0;
   out_26032910504051972[55] = 0;
   out_26032910504051972[56] = 0;
   out_26032910504051972[57] = 0;
   out_26032910504051972[58] = 0;
   out_26032910504051972[59] = 0;
   out_26032910504051972[60] = 0;
   out_26032910504051972[61] = 0;
   out_26032910504051972[62] = 0;
   out_26032910504051972[63] = 0;
   out_26032910504051972[64] = 0;
   out_26032910504051972[65] = 0;
}
void h_32(double *state, double *unused, double *out_6872470075943617214) {
   out_6872470075943617214[0] = state[3];
   out_6872470075943617214[1] = state[4];
   out_6872470075943617214[2] = state[5];
   out_6872470075943617214[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7826837534583484090) {
   out_7826837534583484090[0] = 0;
   out_7826837534583484090[1] = 0;
   out_7826837534583484090[2] = 0;
   out_7826837534583484090[3] = 1;
   out_7826837534583484090[4] = 0;
   out_7826837534583484090[5] = 0;
   out_7826837534583484090[6] = 0;
   out_7826837534583484090[7] = 0;
   out_7826837534583484090[8] = 0;
   out_7826837534583484090[9] = 0;
   out_7826837534583484090[10] = 0;
   out_7826837534583484090[11] = 0;
   out_7826837534583484090[12] = 0;
   out_7826837534583484090[13] = 0;
   out_7826837534583484090[14] = 0;
   out_7826837534583484090[15] = 0;
   out_7826837534583484090[16] = 0;
   out_7826837534583484090[17] = 0;
   out_7826837534583484090[18] = 0;
   out_7826837534583484090[19] = 0;
   out_7826837534583484090[20] = 0;
   out_7826837534583484090[21] = 0;
   out_7826837534583484090[22] = 0;
   out_7826837534583484090[23] = 0;
   out_7826837534583484090[24] = 0;
   out_7826837534583484090[25] = 0;
   out_7826837534583484090[26] = 1;
   out_7826837534583484090[27] = 0;
   out_7826837534583484090[28] = 0;
   out_7826837534583484090[29] = 0;
   out_7826837534583484090[30] = 0;
   out_7826837534583484090[31] = 0;
   out_7826837534583484090[32] = 0;
   out_7826837534583484090[33] = 0;
   out_7826837534583484090[34] = 0;
   out_7826837534583484090[35] = 0;
   out_7826837534583484090[36] = 0;
   out_7826837534583484090[37] = 0;
   out_7826837534583484090[38] = 0;
   out_7826837534583484090[39] = 0;
   out_7826837534583484090[40] = 0;
   out_7826837534583484090[41] = 0;
   out_7826837534583484090[42] = 0;
   out_7826837534583484090[43] = 0;
   out_7826837534583484090[44] = 0;
   out_7826837534583484090[45] = 0;
   out_7826837534583484090[46] = 0;
   out_7826837534583484090[47] = 0;
   out_7826837534583484090[48] = 0;
   out_7826837534583484090[49] = 1;
   out_7826837534583484090[50] = 0;
   out_7826837534583484090[51] = 0;
   out_7826837534583484090[52] = 0;
   out_7826837534583484090[53] = 0;
   out_7826837534583484090[54] = 0;
   out_7826837534583484090[55] = 0;
   out_7826837534583484090[56] = 0;
   out_7826837534583484090[57] = 0;
   out_7826837534583484090[58] = 0;
   out_7826837534583484090[59] = 0;
   out_7826837534583484090[60] = 0;
   out_7826837534583484090[61] = 0;
   out_7826837534583484090[62] = 0;
   out_7826837534583484090[63] = 0;
   out_7826837534583484090[64] = 0;
   out_7826837534583484090[65] = 0;
   out_7826837534583484090[66] = 0;
   out_7826837534583484090[67] = 0;
   out_7826837534583484090[68] = 0;
   out_7826837534583484090[69] = 0;
   out_7826837534583484090[70] = 0;
   out_7826837534583484090[71] = 0;
   out_7826837534583484090[72] = 1;
   out_7826837534583484090[73] = 0;
   out_7826837534583484090[74] = 0;
   out_7826837534583484090[75] = 0;
   out_7826837534583484090[76] = 0;
   out_7826837534583484090[77] = 0;
   out_7826837534583484090[78] = 0;
   out_7826837534583484090[79] = 0;
   out_7826837534583484090[80] = 0;
   out_7826837534583484090[81] = 0;
   out_7826837534583484090[82] = 0;
   out_7826837534583484090[83] = 0;
   out_7826837534583484090[84] = 0;
   out_7826837534583484090[85] = 0;
   out_7826837534583484090[86] = 0;
   out_7826837534583484090[87] = 0;
}
void h_13(double *state, double *unused, double *out_1840851040610273547) {
   out_1840851040610273547[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1840851040610273547[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1840851040610273547[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1182368437291281484) {
   out_1182368437291281484[0] = 0;
   out_1182368437291281484[1] = 0;
   out_1182368437291281484[2] = 0;
   out_1182368437291281484[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1182368437291281484[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1182368437291281484[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1182368437291281484[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1182368437291281484[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1182368437291281484[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1182368437291281484[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1182368437291281484[10] = 0;
   out_1182368437291281484[11] = 0;
   out_1182368437291281484[12] = 0;
   out_1182368437291281484[13] = 0;
   out_1182368437291281484[14] = 0;
   out_1182368437291281484[15] = 0;
   out_1182368437291281484[16] = 0;
   out_1182368437291281484[17] = 0;
   out_1182368437291281484[18] = 0;
   out_1182368437291281484[19] = 0;
   out_1182368437291281484[20] = 0;
   out_1182368437291281484[21] = 0;
   out_1182368437291281484[22] = 0;
   out_1182368437291281484[23] = 0;
   out_1182368437291281484[24] = 0;
   out_1182368437291281484[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1182368437291281484[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1182368437291281484[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1182368437291281484[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1182368437291281484[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1182368437291281484[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1182368437291281484[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1182368437291281484[32] = 0;
   out_1182368437291281484[33] = 0;
   out_1182368437291281484[34] = 0;
   out_1182368437291281484[35] = 0;
   out_1182368437291281484[36] = 0;
   out_1182368437291281484[37] = 0;
   out_1182368437291281484[38] = 0;
   out_1182368437291281484[39] = 0;
   out_1182368437291281484[40] = 0;
   out_1182368437291281484[41] = 0;
   out_1182368437291281484[42] = 0;
   out_1182368437291281484[43] = 0;
   out_1182368437291281484[44] = 0;
   out_1182368437291281484[45] = 0;
   out_1182368437291281484[46] = 0;
   out_1182368437291281484[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1182368437291281484[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1182368437291281484[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1182368437291281484[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1182368437291281484[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1182368437291281484[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1182368437291281484[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1182368437291281484[54] = 0;
   out_1182368437291281484[55] = 0;
   out_1182368437291281484[56] = 0;
   out_1182368437291281484[57] = 0;
   out_1182368437291281484[58] = 0;
   out_1182368437291281484[59] = 0;
   out_1182368437291281484[60] = 0;
   out_1182368437291281484[61] = 0;
   out_1182368437291281484[62] = 0;
   out_1182368437291281484[63] = 0;
   out_1182368437291281484[64] = 0;
   out_1182368437291281484[65] = 0;
}
void h_14(double *state, double *unused, double *out_3237950739396852411) {
   out_3237950739396852411[0] = state[10];
   out_3237950739396852411[1] = state[11];
   out_3237950739396852411[2] = state[12];
}
void H_14(double *state, double *unused, double *out_451767594588476062) {
   out_451767594588476062[0] = 0;
   out_451767594588476062[1] = 0;
   out_451767594588476062[2] = 0;
   out_451767594588476062[3] = 0;
   out_451767594588476062[4] = 0;
   out_451767594588476062[5] = 0;
   out_451767594588476062[6] = 0;
   out_451767594588476062[7] = 0;
   out_451767594588476062[8] = 0;
   out_451767594588476062[9] = 0;
   out_451767594588476062[10] = 1;
   out_451767594588476062[11] = 0;
   out_451767594588476062[12] = 0;
   out_451767594588476062[13] = 0;
   out_451767594588476062[14] = 0;
   out_451767594588476062[15] = 0;
   out_451767594588476062[16] = 0;
   out_451767594588476062[17] = 0;
   out_451767594588476062[18] = 0;
   out_451767594588476062[19] = 0;
   out_451767594588476062[20] = 0;
   out_451767594588476062[21] = 0;
   out_451767594588476062[22] = 0;
   out_451767594588476062[23] = 0;
   out_451767594588476062[24] = 0;
   out_451767594588476062[25] = 0;
   out_451767594588476062[26] = 0;
   out_451767594588476062[27] = 0;
   out_451767594588476062[28] = 0;
   out_451767594588476062[29] = 0;
   out_451767594588476062[30] = 0;
   out_451767594588476062[31] = 0;
   out_451767594588476062[32] = 0;
   out_451767594588476062[33] = 1;
   out_451767594588476062[34] = 0;
   out_451767594588476062[35] = 0;
   out_451767594588476062[36] = 0;
   out_451767594588476062[37] = 0;
   out_451767594588476062[38] = 0;
   out_451767594588476062[39] = 0;
   out_451767594588476062[40] = 0;
   out_451767594588476062[41] = 0;
   out_451767594588476062[42] = 0;
   out_451767594588476062[43] = 0;
   out_451767594588476062[44] = 0;
   out_451767594588476062[45] = 0;
   out_451767594588476062[46] = 0;
   out_451767594588476062[47] = 0;
   out_451767594588476062[48] = 0;
   out_451767594588476062[49] = 0;
   out_451767594588476062[50] = 0;
   out_451767594588476062[51] = 0;
   out_451767594588476062[52] = 0;
   out_451767594588476062[53] = 0;
   out_451767594588476062[54] = 0;
   out_451767594588476062[55] = 0;
   out_451767594588476062[56] = 1;
   out_451767594588476062[57] = 0;
   out_451767594588476062[58] = 0;
   out_451767594588476062[59] = 0;
   out_451767594588476062[60] = 0;
   out_451767594588476062[61] = 0;
   out_451767594588476062[62] = 0;
   out_451767594588476062[63] = 0;
   out_451767594588476062[64] = 0;
   out_451767594588476062[65] = 0;
}
void h_33(double *state, double *unused, double *out_903316753777834409) {
   out_903316753777834409[0] = state[16];
   out_903316753777834409[1] = state[17];
   out_903316753777834409[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3176589915142909576) {
   out_3176589915142909576[0] = 0;
   out_3176589915142909576[1] = 0;
   out_3176589915142909576[2] = 0;
   out_3176589915142909576[3] = 0;
   out_3176589915142909576[4] = 0;
   out_3176589915142909576[5] = 0;
   out_3176589915142909576[6] = 0;
   out_3176589915142909576[7] = 0;
   out_3176589915142909576[8] = 0;
   out_3176589915142909576[9] = 0;
   out_3176589915142909576[10] = 0;
   out_3176589915142909576[11] = 0;
   out_3176589915142909576[12] = 0;
   out_3176589915142909576[13] = 0;
   out_3176589915142909576[14] = 0;
   out_3176589915142909576[15] = 0;
   out_3176589915142909576[16] = 1;
   out_3176589915142909576[17] = 0;
   out_3176589915142909576[18] = 0;
   out_3176589915142909576[19] = 0;
   out_3176589915142909576[20] = 0;
   out_3176589915142909576[21] = 0;
   out_3176589915142909576[22] = 0;
   out_3176589915142909576[23] = 0;
   out_3176589915142909576[24] = 0;
   out_3176589915142909576[25] = 0;
   out_3176589915142909576[26] = 0;
   out_3176589915142909576[27] = 0;
   out_3176589915142909576[28] = 0;
   out_3176589915142909576[29] = 0;
   out_3176589915142909576[30] = 0;
   out_3176589915142909576[31] = 0;
   out_3176589915142909576[32] = 0;
   out_3176589915142909576[33] = 0;
   out_3176589915142909576[34] = 0;
   out_3176589915142909576[35] = 0;
   out_3176589915142909576[36] = 0;
   out_3176589915142909576[37] = 0;
   out_3176589915142909576[38] = 0;
   out_3176589915142909576[39] = 1;
   out_3176589915142909576[40] = 0;
   out_3176589915142909576[41] = 0;
   out_3176589915142909576[42] = 0;
   out_3176589915142909576[43] = 0;
   out_3176589915142909576[44] = 0;
   out_3176589915142909576[45] = 0;
   out_3176589915142909576[46] = 0;
   out_3176589915142909576[47] = 0;
   out_3176589915142909576[48] = 0;
   out_3176589915142909576[49] = 0;
   out_3176589915142909576[50] = 0;
   out_3176589915142909576[51] = 0;
   out_3176589915142909576[52] = 0;
   out_3176589915142909576[53] = 0;
   out_3176589915142909576[54] = 0;
   out_3176589915142909576[55] = 0;
   out_3176589915142909576[56] = 0;
   out_3176589915142909576[57] = 0;
   out_3176589915142909576[58] = 0;
   out_3176589915142909576[59] = 0;
   out_3176589915142909576[60] = 0;
   out_3176589915142909576[61] = 0;
   out_3176589915142909576[62] = 1;
   out_3176589915142909576[63] = 0;
   out_3176589915142909576[64] = 0;
   out_3176589915142909576[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1220311343949854590) {
  H(in_vec, out_1220311343949854590);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3153226439935894210) {
  err_fun(nom_x, delta_x, out_3153226439935894210);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8463461953737375796) {
  inv_err_fun(nom_x, true_x, out_8463461953737375796);
}
void live_H_mod_fun(double *state, double *out_21562585824775244) {
  H_mod_fun(state, out_21562585824775244);
}
void live_f_fun(double *state, double dt, double *out_8333998904903447252) {
  f_fun(state,  dt, out_8333998904903447252);
}
void live_F_fun(double *state, double dt, double *out_7893806645490710208) {
  F_fun(state,  dt, out_7893806645490710208);
}
void live_h_4(double *state, double *unused, double *out_7403799576841385348) {
  h_4(state, unused, out_7403799576841385348);
}
void live_H_4(double *state, double *unused, double *out_3340629146868555404) {
  H_4(state, unused, out_3340629146868555404);
}
void live_h_9(double *state, double *unused, double *out_3237950739396852411) {
  h_9(state, unused, out_3237950739396852411);
}
void live_H_9(double *state, double *unused, double *out_451767594588476062) {
  H_9(state, unused, out_451767594588476062);
}
void live_h_10(double *state, double *unused, double *out_5171938564839258654) {
  h_10(state, unused, out_5171938564839258654);
}
void live_H_10(double *state, double *unused, double *out_56454275011937580) {
  H_10(state, unused, out_56454275011937580);
}
void live_h_12(double *state, double *unused, double *out_4968959824595442666) {
  h_12(state, unused, out_4968959824595442666);
}
void live_H_12(double *state, double *unused, double *out_2719530121820961737) {
  H_12(state, unused, out_2719530121820961737);
}
void live_h_31(double *state, double *unused, double *out_4693443347889562258) {
  h_31(state, unused, out_4693443347889562258);
}
void live_H_31(double *state, double *unused, double *out_26032910504051972) {
  H_31(state, unused, out_26032910504051972);
}
void live_h_32(double *state, double *unused, double *out_6872470075943617214) {
  h_32(state, unused, out_6872470075943617214);
}
void live_H_32(double *state, double *unused, double *out_7826837534583484090) {
  H_32(state, unused, out_7826837534583484090);
}
void live_h_13(double *state, double *unused, double *out_1840851040610273547) {
  h_13(state, unused, out_1840851040610273547);
}
void live_H_13(double *state, double *unused, double *out_1182368437291281484) {
  H_13(state, unused, out_1182368437291281484);
}
void live_h_14(double *state, double *unused, double *out_3237950739396852411) {
  h_14(state, unused, out_3237950739396852411);
}
void live_H_14(double *state, double *unused, double *out_451767594588476062) {
  H_14(state, unused, out_451767594588476062);
}
void live_h_33(double *state, double *unused, double *out_903316753777834409) {
  h_33(state, unused, out_903316753777834409);
}
void live_H_33(double *state, double *unused, double *out_3176589915142909576) {
  H_33(state, unused, out_3176589915142909576);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
